/**
 * @file  Boat.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Boat.
 *
 */
class Boat : public Actor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BOAT
public:
    class Boat& operator=(class Boat const &) = delete;
    Boat(class Boat const &) = delete;
    Boat() = delete;
#endif

public:
    /**
     * @vftbl  8
     * @symbol ?reloadHardcoded@Boat@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -1976761459
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  9
     * @symbol ?reloadHardcodedClient@Boat@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -723330408
     */
    virtual void reloadHardcodedClient(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  14
     * @hash   -137357942
     */
    virtual ~Boat();
    /**
     * @vftbl  17
     * @symbol ?remove@Boat@@UEAAXXZ
     * @hash   175017755
     */
    virtual void remove();
    /**
     * @vftbl  40
     * @hash   -246209152
     */
    virtual void __unk_vfn_40();
    /**
     * @vftbl  48
     * @symbol ?normalTick@Boat@@UEAAXXZ
     * @hash   712913979
     */
    virtual void normalTick();
    /**
     * @vftbl  55
     * @symbol ?getExitTip@Boat@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@W4InputMode@@@Z
     * @hash   2122577602
     */
    virtual std::string getExitTip(std::string const &, enum class InputMode) const;
    /**
     * @vftbl  60
     * @hash   -196162194
     */
    virtual void __unk_vfn_60();
    /**
     * @vftbl  67
     * @hash   -182486203
     */
    virtual void __unk_vfn_67();
    /**
     * @vftbl  78
     * @symbol ?getShadowHeightOffs@Boat@@UEAAMXZ
     * @hash   -347699824
     */
    virtual float getShadowHeightOffs();
    /**
     * @vftbl  79
     * @symbol ?getShadowRadius@Boat@@UEBAMXZ
     * @hash   949457238
     */
    virtual float getShadowRadius() const;
    /**
     * @vftbl  81
     * @hash   -130769027
     */
    virtual void __unk_vfn_81();
    /**
     * @vftbl  84
     * @hash   -135209808
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -125227901
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  89
     * @symbol ?onAboveBubbleColumn@Boat@@UEAAX_N@Z
     * @hash   1134619349
     */
    virtual void onAboveBubbleColumn(bool);
    /**
     * @vftbl  94
     * @symbol ?isPickable@Boat@@UEAA_NXZ
     * @hash   -236623314
     */
    virtual bool isPickable();
    /**
     * @vftbl  95
     * @hash   -105657136
     */
    virtual void __unk_vfn_95();
    /**
     * @vftbl  98
     * @hash   -95675229
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  105
     * @hash   1335894854
     */
    virtual void __unk_vfn_105();
    /**
     * @vftbl  107
     * @hash   1337741896
     */
    virtual void __unk_vfn_107();
    /**
     * @vftbl  108
     * @hash   1331454073
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1359906400
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  134
     * @symbol ?isInvulnerableTo@Boat@@UEBA_NAEBVActorDamageSource@@@Z
     * @hash   -580702290
     */
    virtual bool isInvulnerableTo(class ActorDamageSource const &) const;
    /**
     * @vftbl  181
     * @hash   1511261978
     */
    virtual void __unk_vfn_181();
    /**
     * @vftbl  183
     * @symbol ?getControllingPlayer@Boat@@UEBA?AUActorUniqueID@@XZ
     * @hash   1589050903
     */
    virtual struct ActorUniqueID getControllingPlayer() const;
    /**
     * @vftbl  191
     * @symbol ?canAddPassenger@Boat@@UEBA_NAEAVActor@@@Z
     * @hash   -707811756
     */
    virtual bool canAddPassenger(class Actor &) const;
    /**
     * @vftbl  195
     * @hash   1593557213
     */
    virtual void __unk_vfn_195();
    /**
     * @vftbl  220
     * @hash   -2032751088
     */
    virtual void __unk_vfn_220();
    /**
     * @vftbl  221
     * @hash   -2018004543
     */
    virtual void __unk_vfn_221();
    /**
     * @vftbl  224
     * @symbol ?getPassengerYRotation@Boat@@UEBAMAEBVActor@@@Z
     * @hash   1470068321
     */
    virtual float getPassengerYRotation(class Actor const &) const;
    /**
     * @vftbl  247
     * @hash   -2005177115
     */
    virtual void __unk_vfn_247();
    /**
     * @vftbl  250
     * @hash   -739509363
     */
    virtual void __unk_vfn_250();
    /**
     * @vftbl  268
     * @hash   -1904234636
     */
    virtual void __unk_vfn_268();
    /**
     * @vftbl  269
     * @symbol ?_hurt@Boat@@EEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   -607630503
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  276
     * @hash   -1870241183
     */
    virtual void __unk_vfn_276();
    /**
     * @vftbl  283
     * @hash   -1894354595
     */
    virtual void __unk_vfn_283();
    /**
     * @vftbl  284
     * @symbol ?destroy@Boat@@UEAAXPEAVActor@@@Z
     * @hash   -1207445358
     */
    virtual void destroy(class Actor *);
    /**
     * @symbol ??0Boat@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   873820156
     */
    MCAPI Boat(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ?getRowingTime@Boat@@QEBAMW4Side@@@Z
     * @hash   899313635
     */
    MCAPI float getRowingTime(enum class Side) const;
    /**
     * @symbol ?getWoodID@Boat@@QEBAEXZ
     * @hash   783613927
     */
    MCAPI unsigned char getWoodID() const;
    /**
     * @symbol ?postNormalTick@Boat@@QEAAXXZ
     * @hash   -1123819211
     */
    MCAPI void postNormalTick();
    /**
     * @symbol ?setPaddleState@Boat@@QEAA_NW4Side@@_N@Z
     * @hash   280331836
     */
    MCAPI bool setPaddleState(enum class Side, bool);
    /**
     * @symbol ?setRowingTime@Boat@@QEAAXW4Side@@M@Z
     * @hash   165001847
     */
    MCAPI void setRowingTime(enum class Side, float);

//private:
    /**
     * @symbol ?_control@Boat@@AEAAXXZ
     * @hash   -1443718870
     */
    MCAPI void _control();
    /**
     * @symbol ?_move@Boat@@AEAAXXZ
     * @hash   -1427990436
     */
    MCAPI void _move();
    /**
     * @symbol ?_paddleControl@Boat@@AEAAXW4Side@@AEAVVec3@@1@Z
     * @hash   344916181
     */
    MCAPI void _paddleControl(enum class Side, class Vec3 &, class Vec3 &);

private:

};