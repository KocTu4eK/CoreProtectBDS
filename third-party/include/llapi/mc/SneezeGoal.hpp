/**
 * @file  SneezeGoal.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class SneezeGoal.
 *
 */
class SneezeGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SNEEZEGOAL
public:
    class SneezeGoal& operator=(class SneezeGoal const &) = delete;
    SneezeGoal(class SneezeGoal const &) = delete;
    SneezeGoal() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   -1483045341
     */
    virtual ~SneezeGoal();
    /**
     * @vftbl  1
     * @symbol ?canUse@SneezeGoal@@UEAA_NXZ
     * @hash   528479511
     */
    virtual bool canUse();
    /**
     * @vftbl  2
     * @symbol ?canContinueToUse@SneezeGoal@@UEAA_NXZ
     * @hash   1001441637
     */
    virtual bool canContinueToUse();
    /**
     * @vftbl  3
     * @hash   -1360949453
     */
    virtual void __unk_vfn_3();
    /**
     * @vftbl  4
     * @symbol ?start@SneezeGoal@@UEAAXXZ
     * @hash   710171472
     */
    virtual void start();
    /**
     * @vftbl  5
     * @symbol ?stop@SneezeGoal@@UEAAXXZ
     * @hash   1024290640
     */
    virtual void stop();
    /**
     * @vftbl  6
     * @symbol ?tick@SneezeGoal@@UEAAXXZ
     * @hash   504883963
     */
    virtual void tick();
    /**
     * @vftbl  7
     * @symbol ?appendDebugInfo@SneezeGoal@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   -411683639
     */
    virtual void appendDebugInfo(std::string &) const;
    /**
     * @symbol ??0SneezeGoal@@QEAA@AEAVMob@@MMMAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@11MAEBV?$vector@UMobDescriptor@@V?$allocator@UMobDescriptor@@@std@@@3@M@Z
     * @hash   1012743469
     */
    MCAPI SneezeGoal(class Mob &, float, float, float, std::string const &, std::string const &, std::string const &, float, std::vector<struct MobDescriptor> const &, float);

};