/**
 * @file  EnderDragon.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Monster.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class EnderDragon.
 *
 */
class EnderDragon : public Monster {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENDERDRAGON
public:
    class EnderDragon& operator=(class EnderDragon const &) = delete;
    EnderDragon(class EnderDragon const &) = delete;
    EnderDragon() = delete;
#endif

public:
    /**
     * @vftbl  8
     * @symbol ?reloadHardcoded@EnderDragon@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -160563726
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  14
     * @hash   -1172919607
     */
    virtual ~EnderDragon();
    /**
     * @vftbl  17
     * @symbol ?remove@EnderDragon@@UEAAXXZ
     * @hash   772469392
     */
    virtual void remove();
    /**
     * @vftbl  40
     * @hash   -246209152
     */
    virtual void __unk_vfn_40();
    /**
     * @vftbl  60
     * @hash   -196162194
     */
    virtual void __unk_vfn_60();
    /**
     * @vftbl  67
     * @hash   -182486203
     */
    virtual void __unk_vfn_67();
    /**
     * @vftbl  79
     * @symbol ?getShadowRadius@EnderDragon@@UEBAMXZ
     * @hash   -1210494533
     */
    virtual float getShadowRadius() const;
    /**
     * @vftbl  80
     * @symbol ?getHeadLookVector@EnderDragon@@UEBA?AVVec3@@M@Z
     * @hash   2055598483
     */
    virtual class Vec3 getHeadLookVector(float) const;
    /**
     * @vftbl  81
     * @hash   -130769027
     */
    virtual void __unk_vfn_81();
    /**
     * @vftbl  84
     * @hash   -135209808
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -125227901
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  91
     * @symbol ?isImmobile@EnderDragon@@UEBA_NXZ
     * @hash   333549309
     */
    virtual bool isImmobile() const;
    /**
     * @vftbl  95
     * @hash   -98445792
     */
    virtual void __unk_vfn_95();
    /**
     * @vftbl  98
     * @hash   -102886573
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  105
     * @hash   1335894854
     */
    virtual void __unk_vfn_105();
    /**
     * @vftbl  107
     * @hash   1337741896
     */
    virtual void __unk_vfn_107();
    /**
     * @vftbl  108
     * @hash   1331454073
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1359906400
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  119
     * @symbol ?setSitting@EnderDragon@@UEAAX_N@Z
     * @hash   -505331706
     */
    virtual void setSitting(bool);
    /**
     * @vftbl  134
     * @symbol ?isInvulnerableTo@EnderDragon@@UEBA_NAEBVActorDamageSource@@@Z
     * @hash   1095720793
     */
    virtual bool isInvulnerableTo(class ActorDamageSource const &) const;
    /**
     * @vftbl  141
     * @symbol ?handleEntityEvent@EnderDragon@@UEAAXW4ActorEvent@@H@Z
     * @hash   -1705179909
     */
    virtual void handleEntityEvent(enum class ActorEvent, int);
    /**
     * @vftbl  180
     * @symbol ?canChangeDimensionsUsingPortal@EnderDragon@@UEBA_NXZ
     * @hash   -287615360
     */
    virtual bool canChangeDimensionsUsingPortal() const;
    /**
     * @vftbl  181
     * @hash   1511261978
     */
    virtual void __unk_vfn_181();
    /**
     * @vftbl  193
     * @symbol ?canBePulledIntoVehicle@EnderDragon@@UEBA_NXZ
     * @hash   51750898
     */
    virtual bool canBePulledIntoVehicle() const;
    /**
     * @vftbl  195
     * @hash   1593557213
     */
    virtual void __unk_vfn_195();
    /**
     * @vftbl  210
     * @symbol ?canBeAffected@EnderDragon@@UEBA_NI@Z
     * @hash   -39285196
     */
    virtual bool canBeAffected(unsigned int) const;
    /**
     * @vftbl  220
     * @hash   -2032751088
     */
    virtual void __unk_vfn_220();
    /**
     * @vftbl  221
     * @hash   -2018004543
     */
    virtual void __unk_vfn_221();
    /**
     * @vftbl  247
     * @hash   -2005177115
     */
    virtual void __unk_vfn_247();
    /**
     * @vftbl  250
     * @hash   -739509363
     */
    virtual void __unk_vfn_250();
    /**
     * @vftbl  252
     * @symbol ?die@EnderDragon@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   -1511575426
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  266
     * @symbol ?updateEntitySpecificMolangVariables@EnderDragon@@UEAAXAEAVRenderParams@@@Z
     * @hash   -1318712781
     */
    virtual void updateEntitySpecificMolangVariables(class RenderParams &);
    /**
     * @vftbl  268
     * @hash   -1904234636
     */
    virtual void __unk_vfn_268();
    /**
     * @vftbl  269
     * @symbol ?_hurt@EnderDragon@@MEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   -1189284891
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  276
     * @hash   -1870241183
     */
    virtual void __unk_vfn_276();
    /**
     * @vftbl  282
     * @symbol ?_onSizeUpdated@EnderDragon@@EEAAXXZ
     * @hash   72648730
     */
    virtual void _onSizeUpdated();
    /**
     * @vftbl  283
     * @hash   -1894354595
     */
    virtual void __unk_vfn_283();
    /**
     * @vftbl  297
     * @symbol ?aiStep@EnderDragon@@UEAAXXZ
     * @hash   -138712544
     */
    virtual void aiStep();
    /**
     * @vftbl  310
     * @hash   -1210025534
     */
    virtual void __unk_vfn_310();
    /**
     * @vftbl  314
     * @hash   -1156359450
     */
    virtual void __unk_vfn_314();
    /**
     * @vftbl  348
     * @hash   -1073989257
     */
    virtual void __unk_vfn_348();
    /**
     * @vftbl  360
     * @symbol ?tickDeath@EnderDragon@@MEAAXXZ
     * @hash   -1565446564
     */
    virtual void tickDeath();
    /**
     * @vftbl  362
     * @hash   -1022272081
     */
    virtual void __unk_vfn_362();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ENDERDRAGON
    /**
     * @symbol ?canExistInPeaceful@EnderDragon@@UEBA_NXZ
     * @hash   -420851480
     */
    MCVAPI bool canExistInPeaceful() const;
    /**
     * @symbol ?isFishable@EnderDragon@@UEBA_NXZ
     * @hash   -513408039
     */
    MCVAPI bool isFishable() const;
#endif
    /**
     * @symbol ??0EnderDragon@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   505189607
     */
    MCAPI EnderDragon(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ?dieNaturally@EnderDragon@@QEAAXXZ
     * @hash   850685055
     */
    MCAPI void dieNaturally();
    /**
     * @symbol ?findClosestNode@EnderDragon@@QEAAHAEBVVec3@@@Z
     * @hash   -1042716979
     */
    MCAPI int findClosestNode(class Vec3 const &);
    /**
     * @symbol ?findClosestNode@EnderDragon@@QEAAHXZ
     * @hash   -91415474
     */
    MCAPI int findClosestNode();
    /**
     * @symbol ?findPath@EnderDragon@@QEAA?AV?$unique_ptr@VPath@@U?$default_delete@VPath@@@std@@@std@@HHPEAVPathfinderNode@@@Z
     * @hash   -661815194
     */
    MCAPI std::unique_ptr<class Path> findPath(int, int, class PathfinderNode *);
    /**
     * @symbol ?getFlameCount@EnderDragon@@QEBAHXZ
     * @hash   -544520980
     */
    MCAPI int getFlameCount() const;
    /**
     * @symbol ?getFlapTime@EnderDragon@@QEBAMXZ
     * @hash   859017238
     */
    MCAPI float getFlapTime() const;
    /**
     * @symbol ?getHeadPos@EnderDragon@@QEBA?AVBlockPos@@XZ
     * @hash   -398319236
     */
    MCAPI class BlockPos getHeadPos() const;
    /**
     * @symbol ?getLatencyPos@EnderDragon@@QEBA?BV?$vector@MV?$allocator@M@std@@@std@@HM@Z
     * @hash   1653201786
     */
    MCAPI std::vector<float> const getLatencyPos(int, float) const;
    /**
     * @symbol ?getNumCrystalsAlive@EnderDragon@@QEAAHXZ
     * @hash   -1294912998
     */
    MCAPI int getNumCrystalsAlive();
    /**
     * @symbol ?getTargetPos@EnderDragon@@QEBA?AVVec3@@XZ
     * @hash   -2112018870
     */
    MCAPI class Vec3 getTargetPos() const;
    /**
     * @symbol ?incrementFlameCount@EnderDragon@@QEAAXXZ
     * @hash   929867675
     */
    MCAPI void incrementFlameCount();
    /**
     * @symbol ?onCrystalDestroyed@EnderDragon@@QEAAXAEBVEnderCrystal@@VBlockPos@@AEBVActorDamageSource@@@Z
     * @hash   -550245914
     */
    MCAPI void onCrystalDestroyed(class EnderCrystal const &, class BlockPos, class ActorDamageSource const &);
    /**
     * @symbol ?postAiStep@EnderDragon@@QEAAXXZ
     * @hash   -1398804885
     */
    MCAPI void postAiStep();
    /**
     * @symbol ?resetFlameCount@EnderDragon@@QEAAXXZ
     * @hash   -1995845893
     */
    MCAPI void resetFlameCount();
    /**
     * @symbol ?setDragonKilledCallback@EnderDragon@@QEAAXV?$function@$$A6AXAEAVEnderDragon@@@Z@std@@@Z
     * @hash   107209213
     */
    MCAPI void setDragonKilledCallback(class std::function<void (class EnderDragon &)>);
    /**
     * @symbol ?setHasDragonPreviouslyBeenKilled@EnderDragon@@QEAAX_N@Z
     * @hash   -1418320126
     */
    MCAPI void setHasDragonPreviouslyBeenKilled(bool);
    /**
     * @symbol ?setNumCrystalsAlive@EnderDragon@@QEAAXH@Z
     * @hash   -1766266962
     */
    MCAPI void setNumCrystalsAlive(int);
    /**
     * @symbol ?setTargetPos@EnderDragon@@QEAAXVVec3@@@Z
     * @hash   -774515890
     */
    MCAPI void setTargetPos(class Vec3);
    /**
     * @symbol ?setTurnSpeed@EnderDragon@@QEAAXM@Z
     * @hash   -2118405306
     */
    MCAPI void setTurnSpeed(float);

//protected:
    /**
     * @symbol ?_hurt@EnderDragon@@IEAA_NPEAVAABB@@AEBVActorDamageSource@@M@Z
     * @hash   -2109596976
     */
    MCAPI bool _hurt(class AABB *, class ActorDamageSource const &, float);

//private:
    /**
     * @symbol ?_checkCrystals@EnderDragon@@AEAAXXZ
     * @hash   -1693915065
     */
    MCAPI void _checkCrystals();
    /**
     * @symbol ?_checkWalls@EnderDragon@@AEAA_NVAABB@@@Z
     * @hash   -1636138424
     */
    MCAPI bool _checkWalls(class AABB);
    /**
     * @symbol ?_hurtEntities@EnderDragon@@AEBAXV?$span@V?$not_null@PEAVActor@@@gsl@@$0?0@gsl@@@Z
     * @hash   -299406970
     */
    MCAPI void _hurtEntities(class gsl::span<class gsl::not_null<class Actor *>, -1>) const;
    /**
     * @symbol ?_knockBack@EnderDragon@@AEBAXV?$span@V?$not_null@PEAVActor@@@gsl@@$0?0@gsl@@@Z
     * @hash   2099483449
     */
    MCAPI void _knockBack(class gsl::span<class gsl::not_null<class Actor *>, -1>) const;
    /**
     * @symbol ?_reconstructPath@EnderDragon@@AEAA?AV?$unique_ptr@VPath@@U?$default_delete@VPath@@@std@@@std@@AEAVPathfinderNode@@0W4PathCompletionType@@@Z
     * @hash   -1526516709
     */
    MCAPI std::unique_ptr<class Path> _reconstructPath(class PathfinderNode &, class PathfinderNode &, enum class PathCompletionType);
    /**
     * @symbol ?_isDragonImmuneBlock@EnderDragon@@CA_NAEBVBlockLegacy@@@Z
     * @hash   90091802
     */
    MCAPI static bool _isDragonImmuneBlock(class BlockLegacy const &);

protected:

private:
    /**
     * @symbol ?GROWL_INTERVAL_MAX@EnderDragon@@0HA
     * @hash   -764171892
     */
    MCAPI static int GROWL_INTERVAL_MAX;
    /**
     * @symbol ?GROWL_INTERVAL_MIN@EnderDragon@@0HA
     * @hash   -745238858
     */
    MCAPI static int GROWL_INTERVAL_MIN;
    /**
     * @symbol ?MAX_PATH_RADIUS@EnderDragon@@0HA
     * @hash   -666888331
     */
    MCAPI static int MAX_PATH_RADIUS;
    /**
     * @symbol ?SITTING_ALLOWED_DAMAGE_PERCENTAGE@EnderDragon@@0MA
     * @hash   1115381907
     */
    MCAPI static float SITTING_ALLOWED_DAMAGE_PERCENTAGE;

};