/**
 * @file  Slime.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Monster.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Slime.
 *
 */
class Slime : public Monster {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SLIME
public:
    class Slime& operator=(class Slime const &) = delete;
    Slime(class Slime const &) = delete;
    Slime() = delete;
#endif

public:
    /**
     * @vftbl  8
     * @symbol ?reloadHardcoded@Slime@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   102291285
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  14
     * @hash   766107030
     */
    virtual ~Slime();
    /**
     * @vftbl  17
     * @symbol ?remove@Slime@@UEAAXXZ
     * @hash   1789807043
     */
    virtual void remove();
    /**
     * @vftbl  40
     * @hash   -246209152
     */
    virtual void __unk_vfn_40();
    /**
     * @vftbl  48
     * @symbol ?normalTick@Slime@@UEAAXXZ
     * @hash   -381357869
     */
    virtual void normalTick();
    /**
     * @vftbl  60
     * @hash   -188950850
     */
    virtual void __unk_vfn_60();
    /**
     * @vftbl  67
     * @hash   -182486203
     */
    virtual void __unk_vfn_67();
    /**
     * @vftbl  79
     * @symbol ?getShadowRadius@Slime@@UEBAMXZ
     * @hash   -1571450546
     */
    virtual float getShadowRadius() const;
    /**
     * @vftbl  81
     * @hash   -130769027
     */
    virtual void __unk_vfn_81();
    /**
     * @vftbl  84
     * @hash   -135209808
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -125227901
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  88
     * @symbol ?playerTouch@Slime@@UEAAXAEAVPlayer@@@Z
     * @hash   704269286
     */
    virtual void playerTouch(class Player &);
    /**
     * @vftbl  95
     * @hash   -105657136
     */
    virtual void __unk_vfn_95();
    /**
     * @vftbl  98
     * @hash   -102886573
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  105
     * @hash   1335894854
     */
    virtual void __unk_vfn_105();
    /**
     * @vftbl  107
     * @hash   1337741896
     */
    virtual void __unk_vfn_107();
    /**
     * @vftbl  108
     * @hash   1331454073
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1359906400
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  181
     * @hash   1511261978
     */
    virtual void __unk_vfn_181();
    /**
     * @vftbl  190
     * @symbol ?onSynchedDataUpdate@Slime@@UEAAXH@Z
     * @hash   1864983440
     */
    virtual void onSynchedDataUpdate(int);
    /**
     * @vftbl  195
     * @hash   1593557213
     */
    virtual void __unk_vfn_195();
    /**
     * @vftbl  220
     * @hash   -2032751088
     */
    virtual void __unk_vfn_220();
    /**
     * @vftbl  221
     * @hash   -2018004543
     */
    virtual void __unk_vfn_221();
    /**
     * @vftbl  247
     * @hash   -2005177115
     */
    virtual void __unk_vfn_247();
    /**
     * @vftbl  250
     * @hash   -739509363
     */
    virtual void __unk_vfn_250();
    /**
     * @vftbl  268
     * @hash   -1904234636
     */
    virtual void __unk_vfn_268();
    /**
     * @vftbl  272
     * @symbol ?readAdditionalSaveData@Slime@@MEAAXAEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   1474693992
     */
    virtual void readAdditionalSaveData(class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  273
     * @symbol ?addAdditionalSaveData@Slime@@MEBAXAEAVCompoundTag@@@Z
     * @hash   -640103083
     */
    virtual void addAdditionalSaveData(class CompoundTag &) const;
    /**
     * @vftbl  276
     * @hash   -1870241183
     */
    virtual void __unk_vfn_276();
    /**
     * @vftbl  283
     * @hash   -1894354595
     */
    virtual void __unk_vfn_283();
    /**
     * @vftbl  297
     * @symbol ?aiStep@Slime@@UEAAXXZ
     * @hash   203294147
     */
    virtual void aiStep();
    /**
     * @vftbl  302
     * @symbol ?checkSpawnRules@Slime@@UEAA_N_N@Z
     * @hash   -371494297
     */
    virtual bool checkSpawnRules(bool);
    /**
     * @vftbl  310
     * @hash   -1210025534
     */
    virtual void __unk_vfn_310();
    /**
     * @vftbl  314
     * @hash   -1156359450
     */
    virtual void __unk_vfn_314();
    /**
     * @vftbl  346
     * @symbol ?_getWalkTargetValue@Slime@@MEAAMAEBVBlockPos@@@Z
     * @hash   -1698178118
     */
    virtual float _getWalkTargetValue(class BlockPos const &);
    /**
     * @vftbl  348
     * @hash   -1073989257
     */
    virtual void __unk_vfn_348();
    /**
     * @vftbl  362
     * @hash   -1022272081
     */
    virtual void __unk_vfn_362();
    /**
     * @vftbl  365
     * @symbol ?canDealDamage@Slime@@UEAA_NXZ
     * @hash   475117308
     */
    virtual bool canDealDamage();
    /**
     * @vftbl  366
     * @symbol ?getSquishSound@Slime@@UEAA?AW4LevelSoundEvent@@XZ
     * @hash   1499985938
     */
    virtual enum class LevelSoundEvent getSquishSound();
    /**
     * @vftbl  367
     * @symbol ?setSlimeSize@Slime@@MEAAXH@Z
     * @hash   -2068821632
     */
    virtual void setSlimeSize(int);
    /**
     * @vftbl  368
     * @symbol ?doPlayJumpSound@Slime@@MEAA_NXZ
     * @hash   1752389900
     */
    virtual bool doPlayJumpSound();
    /**
     * @vftbl  369
     * @symbol ?doPlayLandSound@Slime@@MEAA_NXZ
     * @hash   1389732975
     */
    virtual bool doPlayLandSound();
    /**
     * @vftbl  370
     * @symbol ?playJumpSound@Slime@@MEAAXXZ
     * @hash   620262981
     */
    virtual void playJumpSound();
    /**
     * @vftbl  371
     * @symbol ?playLandSound@Slime@@MEAAXXZ
     * @hash   -113343160
     */
    virtual void playLandSound();
    /**
     * @vftbl  372
     * @symbol ?decreaseSquish@Slime@@MEAAXXZ
     * @hash   2104307437
     */
    virtual void decreaseSquish();
    /**
     * @vftbl  373
     * @symbol ?createChild@Slime@@MEAA?AV?$OwnerPtrT@UEntityRefTraits@@@@H@Z
     * @hash   -41121361
     */
    virtual class OwnerPtrT<struct EntityRefTraits> createChild(int);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SLIME
    /**
     * @symbol ?useNewAi@Slime@@UEBA_NXZ
     * @hash   1055793217
     */
    MCVAPI bool useNewAi() const;
#endif
    /**
     * @symbol ??0Slime@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   1151628852
     */
    MCAPI Slime(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ?getOldSquishValue@Slime@@QEBAMXZ
     * @hash   -1297396264
     */
    MCAPI float getOldSquishValue() const;
    /**
     * @symbol ?getSlimeSize@Slime@@QEBAHXZ
     * @hash   -1507142372
     */
    MCAPI int getSlimeSize() const;
    /**
     * @symbol ?getSquishValue@Slime@@QEBAMXZ
     * @hash   -1619805108
     */
    MCAPI float getSquishValue() const;
    /**
     * @symbol ?postNormalTick@Slime@@QEAAX_N@Z
     * @hash   -1601566308
     */
    MCAPI void postNormalTick(bool);
    /**
     * @symbol ?preNormalTick@Slime@@QEAAXXZ
     * @hash   -1961041021
     */
    MCAPI void preNormalTick();
    /**
     * @symbol ?getSpawnRulesCallback@Slime@@SA?AV?$function@$$A6A_NAEBVSpawnConditions@@AEAVBlockSource@@@Z@std@@XZ
     * @hash   98040127
     */
    MCAPI static class std::function<bool (class SpawnConditions const &, class BlockSource &)> getSpawnRulesCallback();

//protected:
    /**
     * @symbol ?justJumped@Slime@@IEAAXXZ
     * @hash   1549686004
     */
    MCAPI void justJumped();
    /**
     * @symbol ?justLanded@Slime@@IEAAXXZ
     * @hash   -1999726175
     */
    MCAPI void justLanded();

protected:

};