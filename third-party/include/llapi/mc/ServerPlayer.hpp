/**
 * @file  ServerPlayer.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Bedrock.hpp"
#include "Player.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
#include "Player.hpp"

#undef BEFORE_EXTRA

/**
 * @brief MC class ServerPlayer.
 *
 */
class ServerPlayer : public Player {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SERVERPLAYER
public:
    class ServerPlayer& operator=(class ServerPlayer const &) = delete;
    ServerPlayer(class ServerPlayer const &) = delete;
    ServerPlayer() = delete;
#endif

public:
    /**
     * @vftbl  10
     * @symbol ?initializeComponents@ServerPlayer@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   1390407036
     */
    virtual void initializeComponents(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  12
     * @symbol ?_serverInitItemStackIds@ServerPlayer@@EEAAXXZ
     * @hash   -1551946998
     */
    virtual void _serverInitItemStackIds();
    /**
     * @vftbl  14
     * @hash   -1283763122
     */
    virtual ~ServerPlayer();
    /**
     * @vftbl  40
     * @hash   -246209152
     */
    virtual void __unk_vfn_40();
    /**
     * @vftbl  48
     * @symbol ?normalTick@ServerPlayer@@UEAAXXZ
     * @hash   -1975378073
     */
    virtual void normalTick();
    /**
     * @vftbl  60
     * @hash   -196162194
     */
    virtual void __unk_vfn_60();
    /**
     * @vftbl  67
     * @hash   -189697547
     */
    virtual void __unk_vfn_67();
    /**
     * @vftbl  81
     * @hash   -130769027
     */
    virtual void __unk_vfn_81();
    /**
     * @vftbl  84
     * @hash   83919760
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -125227901
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  95
     * @hash   -105657136
     */
    virtual void __unk_vfn_95();
    /**
     * @vftbl  98
     * @hash   -102886573
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  105
     * @hash   1328683510
     */
    virtual void __unk_vfn_105();
    /**
     * @vftbl  107
     * @hash   1337741896
     */
    virtual void __unk_vfn_107();
    /**
     * @vftbl  108
     * @hash   1331454073
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1352695056
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  114
     * @symbol ?isValidTarget@ServerPlayer@@UEBA_NPEAVActor@@@Z
     * @hash   -1961878598
     */
    virtual bool isValidTarget(class Actor *) const;
    /**
     * @vftbl  141
     * @symbol ?handleEntityEvent@ServerPlayer@@UEAAXW4ActorEvent@@H@Z
     * @hash   -871306222
     */
    virtual void handleEntityEvent(enum class ActorEvent, int);
    /**
     * @vftbl  152
     * @symbol ?setArmor@ServerPlayer@@UEAAXW4ArmorSlot@@AEBVItemStack@@@Z
     * @hash   1753652135
     */
    virtual void setArmor(enum class ArmorSlot, class ItemStack const &);
    /**
     * @vftbl  162
     * @symbol ?setOffhandSlot@ServerPlayer@@UEAAXAEBVItemStack@@@Z
     * @hash   -151119145
     */
    virtual void setOffhandSlot(class ItemStack const &);
    /**
     * @vftbl  167
     * @symbol ?load@ServerPlayer@@UEAA_NAEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   1200211559
     */
    virtual bool load(class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  180
     * @symbol ?canChangeDimensionsUsingPortal@ServerPlayer@@UEBA_NXZ
     * @hash   1578644071
     */
    virtual bool canChangeDimensionsUsingPortal() const;
    /**
     * @vftbl  181
     * @hash   1511261978
     */
    virtual void __unk_vfn_181();
    /**
     * @vftbl  182
     * @symbol ?changeDimension@ServerPlayer@@UEAAXV?$AutomaticID@VDimension@@H@@@Z
     * @hash   1148015479
     */
    virtual void changeDimension(class AutomaticID<class Dimension, int>);
    /**
     * @vftbl  183
     * @symbol ?getControllingPlayer@ServerPlayer@@UEBA?AUActorUniqueID@@XZ
     * @hash   1528228051
     */
    virtual struct ActorUniqueID getControllingPlayer() const;
    /**
     * @vftbl  184
     * @symbol ?checkFallDamage@ServerPlayer@@UEAAXM_N@Z
     * @hash   -522289761
     */
    virtual void checkFallDamage(float, bool);
    /**
     * @vftbl  186
     * @symbol ?handleFallDistanceOnServer@ServerPlayer@@UEAAXMM_N@Z
     * @hash   -476528225
     */
    virtual void handleFallDistanceOnServer(float, float, bool);
    /**
     * @vftbl  195
     * @hash   1593557213
     */
    virtual void __unk_vfn_195();
    /**
     * @vftbl  212
     * @symbol ?onEffectAdded@ServerPlayer@@MEAAXAEAVMobEffectInstance@@@Z
     * @hash   997751850
     */
    virtual void onEffectAdded(class MobEffectInstance &);
    /**
     * @vftbl  213
     * @symbol ?onEffectUpdated@ServerPlayer@@MEAAXAEAVMobEffectInstance@@@Z
     * @hash   696376239
     */
    virtual void onEffectUpdated(class MobEffectInstance &);
    /**
     * @vftbl  214
     * @symbol ?onEffectRemoved@ServerPlayer@@MEAAXAEAVMobEffectInstance@@@Z
     * @hash   -1602640454
     */
    virtual void onEffectRemoved(class MobEffectInstance &);
    /**
     * @vftbl  220
     * @hash   -2032751088
     */
    virtual void __unk_vfn_220();
    /**
     * @vftbl  221
     * @hash   -2018004543
     */
    virtual void __unk_vfn_221();
    /**
     * @vftbl  247
     * @hash   -2005177115
     */
    virtual void __unk_vfn_247();
    /**
     * @vftbl  250
     * @hash   -739509363
     */
    virtual void __unk_vfn_250();
    /**
     * @vftbl  252
     * @symbol ?die@ServerPlayer@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   -1499583625
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  268
     * @hash   -1904234636
     */
    virtual void __unk_vfn_268();
    /**
     * @vftbl  276
     * @hash   -1870241183
     */
    virtual void __unk_vfn_276();
    /**
     * @vftbl  283
     * @hash   -1894354595
     */
    virtual void __unk_vfn_283();
    /**
     * @vftbl  284
     * @symbol ?knockback@ServerPlayer@@UEAAXPEAVActor@@HMMMMM@Z
     * @hash   -2002813352
     */
    virtual void knockback(class Actor *, int, float, float, float, float, float);
    /**
     * @vftbl  297
     * @symbol ?aiStep@ServerPlayer@@UEAAXXZ
     * @hash   -336522361
     */
    virtual void aiStep();
    /**
     * @vftbl  310
     * @hash   -1210025534
     */
    virtual void __unk_vfn_310();
    /**
     * @vftbl  314
     * @hash   -1156359450
     */
    virtual void __unk_vfn_314();
    /**
     * @vftbl  322
     * @symbol ?hurtArmorSlots@ServerPlayer@@UEAAXAEBVActorDamageSource@@HV?$bitset@$03@std@@@Z
     * @hash   -596520216
     */
    virtual void hurtArmorSlots(class ActorDamageSource const &, int, class std::bitset<4>);
    /**
     * @vftbl  323
     * @symbol ?setDamagedArmor@ServerPlayer@@UEAAXW4ArmorSlot@@AEBVItemStack@@@Z
     * @hash   2142157014
     */
    virtual void setDamagedArmor(enum class ArmorSlot, class ItemStack const &);
    /**
     * @vftbl  324
     * @symbol ?sendArmorDamage@ServerPlayer@@UEAAXV?$bitset@$03@std@@@Z
     * @hash   1939658044
     */
    virtual void sendArmorDamage(class std::bitset<4>);
    /**
     * @vftbl  325
     * @symbol ?sendArmor@ServerPlayer@@UEAAXV?$bitset@$03@std@@@Z
     * @hash   575158795
     */
    virtual void sendArmor(class std::bitset<4>);
    /**
     * @vftbl  335
     * @symbol ?clearVanishEnchantedItemsOnDeath@ServerPlayer@@UEAAXXZ
     * @hash   1141357320
     */
    virtual void clearVanishEnchantedItemsOnDeath();
    /**
     * @vftbl  336
     * @symbol ?sendInventory@ServerPlayer@@UEAAX_N@Z
     * @hash   -773169691
     */
    virtual void sendInventory(bool);
    /**
     * @vftbl  348
     * @hash   -1066777913
     */
    virtual void __unk_vfn_348();
    /**
     * @vftbl  362
     * @hash   -1022272081
     */
    virtual void __unk_vfn_362();
    /**
     * @vftbl  364
     * @symbol ?prepareRegion@ServerPlayer@@UEAAXAEAVChunkSource@@@Z
     * @hash   2046040646
     */
    virtual void prepareRegion(class ChunkSource &);
    /**
     * @vftbl  365
     * @symbol ?destroyRegion@ServerPlayer@@UEAAXXZ
     * @hash   -1106898879
     */
    virtual void destroyRegion();
    /**
     * @vftbl  370
     * @symbol ?changeDimensionWithCredits@ServerPlayer@@UEAAXV?$AutomaticID@VDimension@@H@@@Z
     * @hash   2010338895
     */
    virtual void changeDimensionWithCredits(class AutomaticID<class Dimension, int>);
    /**
     * @vftbl  371
     * @symbol ?tickWorld@ServerPlayer@@UEAAXAEBUTick@@@Z
     * @hash   586777737
     */
    virtual void tickWorld(struct Tick const &);
    /**
     * @vftbl  372
     * @hash   -1036403586
     */
    virtual void __unk_vfn_372();
    /**
     * @vftbl  374
     * @symbol ?moveView@ServerPlayer@@UEAAXXZ
     * @hash   2102557977
     */
    virtual void moveView();
    /**
     * @vftbl  375
     * @symbol ?moveSpawnView@ServerPlayer@@UEAAXAEBVVec3@@V?$AutomaticID@VDimension@@H@@@Z
     * @hash   -948333248
     */
    virtual void moveSpawnView(class Vec3 const &, class AutomaticID<class Dimension, int>);
    /**
     * @vftbl  378
     * @symbol ?checkMovementStats@ServerPlayer@@UEAAXAEBVVec3@@@Z
     * @hash   2073547687
     */
    virtual void checkMovementStats(class Vec3 const &);
    /**
     * @vftbl  379
     * @hash   -987178283
     */
    virtual void __unk_vfn_379();
    /**
     * @vftbl  380
     * @hash   -959649477
     */
    virtual void __unk_vfn_380();
    /**
     * @vftbl  381
     * @symbol ?respawn@ServerPlayer@@UEAAXXZ
     * @hash   -1075419205
     */
    virtual void respawn();
    /**
     * @vftbl  382
     * @hash   -957802435
     */
    virtual void __unk_vfn_382();
    /**
     * @vftbl  383
     * @hash   -1006850914
     */
    virtual void __unk_vfn_383();
    /**
     * @vftbl  388
     * @hash   -1002233309
     */
    virtual void __unk_vfn_388();
    /**
     * @vftbl  389
     * @hash   -1001309788
     */
    virtual void __unk_vfn_389();
    /**
     * @vftbl  390
     * @symbol ?openTrading@ServerPlayer@@UEAAXAEBUActorUniqueID@@_N@Z
     * @hash   908937339
     */
    virtual void openTrading(struct ActorUniqueID const &, bool);
    /**
     * @vftbl  392
     * @hash   -979145284
     */
    virtual void __unk_vfn_392();
    /**
     * @vftbl  393
     * @symbol ?openNpcInteractScreen@ServerPlayer@@UEAAXV?$shared_ptr@UINpcDialogueData@@@std@@@Z
     * @hash   1036677305
     */
    virtual void openNpcInteractScreen(class std::shared_ptr<struct INpcDialogueData>);
    /**
     * @vftbl  394
     * @symbol ?openInventory@ServerPlayer@@UEAAXXZ
     * @hash   191650789
     */
    virtual void openInventory();
    /**
     * @vftbl  395
     * @hash   -976374721
     */
    virtual void __unk_vfn_395();
    /**
     * @vftbl  396
     * @hash   -975451200
     */
    virtual void __unk_vfn_396();
    /**
     * @vftbl  397
     * @symbol ?displayTextObjectMessage@ServerPlayer@@UEAAXAEBVTextObjectRoot@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
     * @hash   367123079
     */
    virtual void displayTextObjectMessage(class TextObjectRoot const &, std::string const &, std::string const &);
    /**
     * @vftbl  398
     * @symbol ?displayTextObjectWhisperMessage@ServerPlayer@@UEAAXAEBVResolvedTextObject@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
     * @hash   817210727
     */
    virtual void displayTextObjectWhisperMessage(class ResolvedTextObject const &, std::string const &, std::string const &);
    /**
     * @vftbl  399
     * @symbol ?displayTextObjectWhisperMessage@ServerPlayer@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
     * @hash   -1855670682
     */
    virtual void displayTextObjectWhisperMessage(std::string const &, std::string const &, std::string const &);
    /**
     * @vftbl  400
     * @symbol ?displayWhisperMessage@ServerPlayer@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000@Z
     * @hash   1317280250
     */
    virtual void displayWhisperMessage(std::string const &, std::string const &, std::string const &, std::string const &);
    /**
     * @vftbl  402
     * @symbol ?stopSleepInBed@ServerPlayer@@UEAAX_N0@Z
     * @hash   -405435966
     */
    virtual void stopSleepInBed(bool, bool);
    /**
     * @vftbl  406
     * @hash   -345609878
     */
    virtual void __unk_vfn_406();
    /**
     * @vftbl  407
     * @hash   -344686357
     */
    virtual void __unk_vfn_407();
    /**
     * @vftbl  408
     * @symbol ?isHostingPlayer@ServerPlayer@@UEBA_NXZ
     * @hash   -1283331579
     */
    virtual bool isHostingPlayer() const;
    /**
     * @vftbl  409
     * @symbol ?isLoading@ServerPlayer@@UEBA_NXZ
     * @hash   -779843882
     */
    virtual bool isLoading() const;
    /**
     * @vftbl  410
     * @symbol ?isPlayerInitialized@ServerPlayer@@UEBA_NXZ
     * @hash   837295357
     */
    virtual bool isPlayerInitialized() const;
    /**
     * @vftbl  411
     * @hash   -321598332
     */
    virtual void __unk_vfn_411();
    /**
     * @vftbl  414
     * @symbol ?setPlayerGameType@ServerPlayer@@UEAAXW4GameType@@@Z
     * @hash   1118937190
     */
    virtual void setPlayerGameType(enum class GameType);
    /**
     * @vftbl  418
     * @hash   -278984709
     */
    virtual void __unk_vfn_418();
    /**
     * @vftbl  422
     * @symbol ?setContainerData@ServerPlayer@@UEAAXAEAVIContainerManager@@HH@Z
     * @hash   -446023589
     */
    virtual void setContainerData(class IContainerManager &, int, int);
    /**
     * @vftbl  423
     * @symbol ?slotChanged@ServerPlayer@@UEAAXAEAVIContainerManager@@AEAVContainer@@HAEBVItemStack@@2_N@Z
     * @hash   -1128781446
     */
    virtual void slotChanged(class IContainerManager &, class Container &, int, class ItemStack const &, class ItemStack const &, bool);
    /**
     * @vftbl  425
     * @symbol ?refreshContainer@ServerPlayer@@UEAAXAEAVIContainerManager@@@Z
     * @hash   -665120066
     */
    virtual void refreshContainer(class IContainerManager &);
    /**
     * @vftbl  428
     * @symbol ?isActorRelevant@ServerPlayer@@UEAA_NAEBVActor@@@Z
     * @hash   1835759799
     */
    virtual bool isActorRelevant(class Actor const &);
    /**
     * @vftbl  429
     * @symbol ?isTeacher@ServerPlayer@@UEBA_NXZ
     * @hash   -1315673572
     */
    virtual bool isTeacher() const;
    /**
     * @vftbl  430
     * @symbol ?onSuspension@ServerPlayer@@UEAAXXZ
     * @hash   -724544321
     */
    virtual void onSuspension();
    /**
     * @vftbl  431
     * @symbol ?onLinkedSlotsChanged@ServerPlayer@@UEAAXXZ
     * @hash   -342560118
     */
    virtual void onLinkedSlotsChanged();
    /**
     * @vftbl  437
     * @symbol ?sendInventoryTransaction@ServerPlayer@@UEBAXAEBVInventoryTransaction@@@Z
     * @hash   1600542401
     */
    virtual void sendInventoryTransaction(class InventoryTransaction const &) const;
    /**
     * @vftbl  438
     * @symbol ?sendComplexInventoryTransaction@ServerPlayer@@UEBAXV?$unique_ptr@VComplexInventoryTransaction@@U?$default_delete@VComplexInventoryTransaction@@@std@@@std@@@Z
     * @hash   -548411239
     */
    virtual void sendComplexInventoryTransaction(std::unique_ptr<class ComplexInventoryTransaction>) const;
    /**
     * @vftbl  439
     * @symbol ?sendNetworkPacket@ServerPlayer@@UEBAXAEAVPacket@@@Z
     * @hash   382100010
     */
    virtual void sendNetworkPacket(class Packet &) const;
    /**
     * @vftbl  440
     * @symbol ?getPlayerEventCoordinator@ServerPlayer@@UEAAAEAVPlayerEventCoordinator@@XZ
     * @hash   -1098345005
     */
    virtual class PlayerEventCoordinator & getPlayerEventCoordinator();
    /**
     * @vftbl  441
     * @symbol ?tryGetMoveInputHandler@ServerPlayer@@UEBAPEAVMoveInputHandler@@XZ
     * @hash   872286771
     */
    virtual class MoveInputHandler * tryGetMoveInputHandler() const;
    /**
     * @vftbl  442
     * @symbol ?getInputMode@ServerPlayer@@UEBA?AW4InputMode@@XZ
     * @hash   1068397788
     */
    virtual enum class InputMode getInputMode() const;
    /**
     * @vftbl  443
     * @symbol ?getPlayMode@ServerPlayer@@UEBA?AW4ClientPlayMode@@XZ
     * @hash   852261991
     */
    virtual enum class ClientPlayMode getPlayMode() const;
    /**
     * @vftbl  444
     * @symbol ?reportMovementTelemetry@ServerPlayer@@UEAAXW4MovementEventType@@@Z
     * @hash   -1226645796
     */
    virtual void reportMovementTelemetry(enum class MovementEventType);
    /**
     * @vftbl  445
     * @hash   -182044795
     */
    virtual void __unk_vfn_445();
    /**
     * @vftbl  448
     * @symbol ?addSavedChunk@ServerPlayer@@UEAAXAEBVChunkPos@@@Z
     * @hash   -1690191104
     */
    virtual void addSavedChunk(class ChunkPos const &);
    /**
     * @vftbl  451
     * @symbol ?getEditorPlayer@ServerPlayer@@UEBA?AV?$NonOwnerPointer@VIEditorPlayer@Editor@@@Bedrock@@XZ
     * @hash   -525249456
     */
    virtual class Bedrock::NonOwnerPointer<class Editor::IEditorPlayer> getEditorPlayer() const;
    /**
     * @vftbl  452
     * @symbol ?destroyEditorPlayer@ServerPlayer@@UEAAXXZ
     * @hash   -483729845
     */
    virtual void destroyEditorPlayer();
    /**
     * @vftbl  453
     * @symbol ?_getSpawnChunkLimit@ServerPlayer@@MEBAHXZ
     * @hash   -1318521518
     */
    virtual int _getSpawnChunkLimit() const;
    /**
     * @vftbl  454
     * @symbol ?_updateChunkPublisherView@ServerPlayer@@MEAAXAEBVVec3@@M@Z
     * @hash   -1347828520
     */
    virtual void _updateChunkPublisherView(class Vec3 const &, float);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SERVERPLAYER
    /**
     * @symbol ?frameUpdate@ServerPlayer@@UEAAXAEAVFrameUpdateContextBase@@@Z
     * @hash   -1277212911
     */
    MCVAPI void frameUpdate(class FrameUpdateContextBase &);
    /**
     * @symbol ?openPortfolio@ServerPlayer@@UEAAXXZ
     * @hash   439213377
     */
    MCVAPI void openPortfolio();
#endif
    /**
     * @symbol ??0ServerPlayer@@QEAA@AEAVLevel@@AEAVPacketSender@@AEAVNetworkHandler@@AEAVActiveTransfersManager@Server@ClientBlobCache@@W4GameType@@AEBVNetworkIdentifier@@W4SubClientId@@V?$function@$$A6AXAEAVServerPlayer@@@Z@std@@VUUID@mce@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@9V?$unique_ptr@VCertificate@@U?$default_delete@VCertificate@@@std@@@std@@H_NAEAVEntityContext@@@Z
     * @hash   47961588
     */
    MCAPI ServerPlayer(class Level &, class PacketSender &, class NetworkHandler &, class ClientBlobCache::Server::ActiveTransfersManager &, enum class GameType, class NetworkIdentifier const &, enum class SubClientId, class std::function<void (class ServerPlayer &)>, class mce::UUID, std::string const &, std::string const &, std::unique_ptr<class Certificate>, int, bool, class EntityContext &);
    /**
     * @symbol ?addActorToReplicationList@ServerPlayer@@QEAAXV?$not_null@PEAVActor@@@gsl@@_N@Z
     * @hash   -1149345460
     */
    MCAPI void addActorToReplicationList(class gsl::not_null<class Actor *>, bool);
    /**
     * @symbol ?checkCheating@ServerPlayer@@QEAAXAEBVVec3@@@Z
     * @hash   1403298948
     */
    MCAPI void checkCheating(class Vec3 const &);
    /**
     * @symbol ?disconnect@ServerPlayer@@QEAAXXZ
     * @hash   -982442315
     */
    MCAPI void disconnect();
    /**
     * @symbol ?doDeleteContainerManager@ServerPlayer@@QEAAX_N@Z
     * @hash   2057788978
     */
    MCAPI void doDeleteContainerManager(bool);
    /**
     * @symbol ?doInitialSpawn@ServerPlayer@@QEAAXXZ
     * @hash   1307319669
     */
    MCAPI void doInitialSpawn();
    /**
     * @symbol ?getItemStackNetManagerServer@ServerPlayer@@QEAAAEAVItemStackNetManagerServer@@XZ
     * @hash   -1402829336
     */
    MCAPI class ItemStackNetManagerServer & getItemStackNetManagerServer();
    /**
     * @symbol ?getServerMoveInputHandler@ServerPlayer@@QEAAPEAVServerMoveInputHandler@@XZ
     * @hash   177498605
     */
    MCAPI class ServerMoveInputHandler * getServerMoveInputHandler();
    /**
     * @symbol ?handleActorPickRequestOnServer@ServerPlayer@@QEAAXAEAVActor@@_N1@Z
     * @hash   -1193224948
     */
    MCAPI void handleActorPickRequestOnServer(class Actor &, bool, bool);
    /**
     * @symbol ?handleBlockPickRequestOnServer@ServerPlayer@@QEAAXAEBVBlockPos@@_N@Z
     * @hash   -1896069839
     */
    MCAPI void handleBlockPickRequestOnServer(class BlockPos const &, bool);
    /**
     * @symbol ?openUnmanagedContainer@ServerPlayer@@QEAA?AW4ContainerID@@XZ
     * @hash   -1455173788
     */
    MCAPI enum class ContainerID openUnmanagedContainer();
    /**
     * @symbol ?postLoad@ServerPlayer@@QEAAX_N@Z
     * @hash   1108399770
     */
    MCAPI void postLoad(bool);
    /**
     * @symbol ?postReplicationTick@ServerPlayer@@QEAAXAEBUTick@@@Z
     * @hash   850431090
     */
    MCAPI void postReplicationTick(struct Tick const &);
    /**
     * @symbol ?preReplicationTick@ServerPlayer@@QEAAXAEBUTick@@@Z
     * @hash   -910132790
     */
    MCAPI void preReplicationTick(struct Tick const &);
    /**
     * @symbol ?selectItem@ServerPlayer@@QEAAXAEBVItemStack@@@Z
     * @hash   -196856458
     */
    MCAPI void selectItem(class ItemStack const &);
    /**
     * @symbol ?sendMobEffectPackets@ServerPlayer@@QEAAXXZ
     * @hash   -402172827
     */
    MCAPI void sendMobEffectPackets();
    /**
     * @symbol ?sendPlayerOnGround@ServerPlayer@@QEAAXXZ
     * @hash   -1507709851
     */
    MCAPI void sendPlayerOnGround();
    /**
     * @symbol ?setClientChunkRadius@ServerPlayer@@QEAAXI@Z
     * @hash   -716571152
     */
    MCAPI void setClientChunkRadius(unsigned int);
    /**
     * @symbol ?setInputMode@ServerPlayer@@QEAAXAEBW4InputMode@@@Z
     * @hash   885625900
     */
    MCAPI void setInputMode(enum class InputMode const &);
    /**
     * @symbol ?setLocalPlayerAsInitialized@ServerPlayer@@QEAAXXZ
     * @hash   44791411
     */
    MCAPI void setLocalPlayerAsInitialized();
    /**
     * @symbol ?setPlayMode@ServerPlayer@@QEAAXAEBW4ClientPlayMode@@@Z
     * @hash   160623508
     */
    MCAPI void setPlayMode(enum class ClientPlayMode const &);
    /**
     * @symbol ?setPlayerInput@ServerPlayer@@QEAAXMM_N0@Z
     * @hash   -1651457832
     */
    MCAPI void setPlayerInput(float, float, bool, bool);
    /**
     * @symbol ?setSyncTimeIfClientServerPositionMatches@ServerPlayer@@QEAAXAEBVVec3@@@Z
     * @hash   1533857882
     */
    MCAPI void setSyncTimeIfClientServerPositionMatches(class Vec3 const &);
    /**
     * @symbol ?triggerRespawnFromCompletingTheEnd@ServerPlayer@@QEAAXXZ
     * @hash   -1711464363
     */
    MCAPI void triggerRespawnFromCompletingTheEnd();
    /**
     * @symbol ?tryGetFromEntity@ServerPlayer@@SAPEAV1@AEAVEntityContext@@_N@Z
     * @hash   -618312952
     */
    MCAPI static class ServerPlayer * tryGetFromEntity(class EntityContext &, bool);

//private:
    /**
     * @symbol ?_checkForLoadedTickingAreas@ServerPlayer@@AEBA_NXZ
     * @hash   -1390173433
     */
    MCAPI bool _checkForLoadedTickingAreas() const;
    /**
     * @symbol ?_logCDEvent@ServerPlayer@@AEAAXW4CrashDumpLogStringID@@000@Z
     * @hash   2086631148
     */
    MCAPI void _logCDEvent(enum class CrashDumpLogStringID, enum class CrashDumpLogStringID, enum class CrashDumpLogStringID, enum class CrashDumpLogStringID);
    /**
     * @symbol ?_nextContainerCounter@ServerPlayer@@AEAA?AW4ContainerID@@XZ
     * @hash   -1293706071
     */
    MCAPI enum class ContainerID _nextContainerCounter();
    /**
     * @symbol ?_removeNearbyEntities@ServerPlayer@@AEAAXXZ
     * @hash   -1979235717
     */
    MCAPI void _removeNearbyEntities();
    /**
     * @symbol ?_scanForNearbyActors@ServerPlayer@@AEAAXXZ
     * @hash   -1516706462
     */
    MCAPI void _scanForNearbyActors();
    /**
     * @symbol ?_setContainerManager@ServerPlayer@@AEAAXV?$shared_ptr@VIContainerManager@@@std@@@Z
     * @hash   1337040086
     */
    MCAPI void _setContainerManager(class std::shared_ptr<class IContainerManager>);
    /**
     * @symbol ?_updateNearbyActors@ServerPlayer@@AEAAXXZ
     * @hash   2106774557
     */
    MCAPI void _updateNearbyActors();

private:

};