/**
 * @file  MovingBlockActor.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockActor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class MovingBlockActor.
 *
 */
class MovingBlockActor : public BlockActor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOVINGBLOCKACTOR
public:
    class MovingBlockActor& operator=(class MovingBlockActor const &) = delete;
    MovingBlockActor(class MovingBlockActor const &) = delete;
    MovingBlockActor() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   -668719968
     */
    virtual ~MovingBlockActor();
    /**
     * @vftbl  1
     * @symbol ?load@MovingBlockActor@@UEAAXAEAVLevel@@AEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   -2091635907
     */
    virtual void load(class Level &, class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  2
     * @symbol ?save@MovingBlockActor@@UEBA_NAEAVCompoundTag@@@Z
     * @hash   -1095178532
     */
    virtual bool save(class CompoundTag &) const;
    /**
     * @vftbl  7
     * @symbol ?tick@MovingBlockActor@@UEAAXAEAVBlockSource@@@Z
     * @hash   135899174
     */
    virtual void tick(class BlockSource &);
    /**
     * @vftbl  12
     * @hash   -380221563
     */
    virtual void __unk_vfn_12();
    /**
     * @vftbl  16
     * @hash   -376527479
     */
    virtual void __unk_vfn_16();
    /**
     * @vftbl  27
     * @symbol ?getOwningPiston@MovingBlockActor@@UEAAPEAVPistonBlockActor@@AEAVBlockSource@@@Z
     * @hash   -649408701
     */
    virtual class PistonBlockActor * getOwningPiston(class BlockSource &);
    /**
     * @vftbl  28
     * @hash   -346051286
     */
    virtual void __unk_vfn_28();
    /**
     * @vftbl  29
     * @hash   -308978789
     */
    virtual void __unk_vfn_29();
    /**
     * @vftbl  30
     * @hash   -288661327
     */
    virtual void __unk_vfn_30();
    /**
     * @vftbl  31
     * @symbol ?getDeletionDelayTimeSeconds@MovingBlockActor@@UEBAMXZ
     * @hash   650955051
     */
    virtual float getDeletionDelayTimeSeconds() const;
    /**
     * @vftbl  32
     * @hash   -322963261
     */
    virtual void __unk_vfn_32();
    /**
     * @vftbl  33
     * @hash   -322039740
     */
    virtual void __unk_vfn_33();
    /**
     * @vftbl  34
     * @hash   -321116219
     */
    virtual void __unk_vfn_34();
    /**
     * @vftbl  35
     * @symbol ?_getUpdatePacket@MovingBlockActor@@MEAA?AV?$unique_ptr@VBlockActorDataPacket@@U?$default_delete@VBlockActorDataPacket@@@std@@@std@@AEAVBlockSource@@@Z
     * @hash   -750482017
     */
    virtual std::unique_ptr<class BlockActorDataPacket> _getUpdatePacket(class BlockSource &);
    /**
     * @vftbl  36
     * @symbol ?_onUpdatePacket@MovingBlockActor@@MEAAXAEBVCompoundTag@@AEAVBlockSource@@@Z
     * @hash   624503475
     */
    virtual void _onUpdatePacket(class CompoundTag const &, class BlockSource &);
    /**
     * @symbol ??0MovingBlockActor@@QEAA@AEBVBlockPos@@@Z
     * @hash   -712656455
     */
    MCAPI MovingBlockActor(class BlockPos const &);
    /**
     * @symbol ?_validPistonPos@MovingBlockActor@@QEBA_NAEBVIConstBlockSource@@@Z
     * @hash   -1197557177
     */
    MCAPI bool _validPistonPos(class IConstBlockSource const &) const;
    /**
     * @symbol ?aquireBlockEntity@MovingBlockActor@@QEAA?AV?$shared_ptr@VBlockActor@@@std@@XZ
     * @hash   -991733267
     */
    MCAPI class std::shared_ptr<class BlockActor> aquireBlockEntity();
    /**
     * @symbol ?getCollisionShape@MovingBlockActor@@QEBAAEBVAABB@@XZ
     * @hash   1671379690
     */
    MCAPI class AABB const & getCollisionShape() const;
    /**
     * @symbol ?getDrawPos@MovingBlockActor@@QEBA?AVVec3@@AEBVIConstBlockSource@@M@Z
     * @hash   -147531270
     */
    MCAPI class Vec3 getDrawPos(class IConstBlockSource const &, float) const;
    /**
     * @symbol ?getExtraBlock@MovingBlockActor@@QEAAAEBVBlock@@XZ
     * @hash   -370983176
     */
    MCAPI class Block const & getExtraBlock();
    /**
     * @symbol ?getMovingBlock@MovingBlockActor@@QEBAAEBVBlock@@XZ
     * @hash   277573352
     */
    MCAPI class Block const & getMovingBlock() const;
    /**
     * @symbol ?moveCollidedEntities@MovingBlockActor@@QEAAXAEAVPistonBlockActor@@AEAVBlockSource@@@Z
     * @hash   180648987
     */
    MCAPI void moveCollidedEntities(class PistonBlockActor &, class BlockSource &);
    /**
     * @symbol ?registerPiston@MovingBlockActor@@QEAAXAEBVBlockSource@@AEBVBlockPos@@@Z
     * @hash   1588409985
     */
    MCAPI void registerPiston(class BlockSource const &, class BlockPos const &);
    /**
     * @symbol ?setBlock@MovingBlockActor@@QEAAXAEBVBlock@@@Z
     * @hash   30680854
     */
    MCAPI void setBlock(class Block const &);
    /**
     * @symbol ?setBlockEntity@MovingBlockActor@@QEAAXV?$shared_ptr@VBlockActor@@@std@@@Z
     * @hash   659366921
     */
    MCAPI void setBlockEntity(class std::shared_ptr<class BlockActor>);
    /**
     * @symbol ?setCollisionShape@MovingBlockActor@@QEAAXAEBVAABB@@@Z
     * @hash   -298548030
     */
    MCAPI void setCollisionShape(class AABB const &);
    /**
     * @symbol ?setExtraBlock@MovingBlockActor@@QEAAXAEBVBlock@@@Z
     * @hash   -1165773848
     */
    MCAPI void setExtraBlock(class Block const &);

};