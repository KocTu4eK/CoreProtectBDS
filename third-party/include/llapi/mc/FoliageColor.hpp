/**
 * @file  FoliageColor.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class FoliageColor.
 *
 */
class FoliageColor {

#define AFTER_EXTRA
// Add Member There
public:
enum class PaletteName;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FOLIAGECOLOR
public:
    class FoliageColor& operator=(class FoliageColor const &) = delete;
    FoliageColor(class FoliageColor const &) = delete;
    FoliageColor() = delete;
#endif

public:
    /**
     * @symbol ?getBirchColor@FoliageColor@@SAHMM@Z
     * @hash   -1935932754
     */
    MCAPI static int getBirchColor(float, float);
    /**
     * @symbol ?getDefaultColor@FoliageColor@@SAHXZ
     * @hash   -14821306
     */
    MCAPI static int getDefaultColor();
    /**
     * @symbol ?getEvergreenColor@FoliageColor@@SAHMM@Z
     * @hash   479566622
     */
    MCAPI static int getEvergreenColor(float, float);
    /**
     * @symbol ?getFoliageColor@FoliageColor@@SAHMM@Z
     * @hash   1263035614
     */
    MCAPI static int getFoliageColor(float, float);
    /**
     * @symbol ?getFoliageColor@FoliageColor@@SAHW4PaletteName@1@MM@Z
     * @hash   404916952
     */
    MCAPI static int getFoliageColor(enum class FoliageColor::PaletteName, float, float);
    /**
     * @symbol ?getMapBirchColor@FoliageColor@@SAHMM@Z
     * @hash   -894602016
     */
    MCAPI static int getMapBirchColor(float, float);
    /**
     * @symbol ?getMapEvergreenColor@FoliageColor@@SAHMM@Z
     * @hash   411716560
     */
    MCAPI static int getMapEvergreenColor(float, float);
    /**
     * @symbol ?getMapFoliageColor@FoliageColor@@SAHMM@Z
     * @hash   767152544
     */
    MCAPI static int getMapFoliageColor(float, float);
    /**
     * @symbol ?getMapGrassColor@FoliageColor@@SAHAEAVBlockSource@@AEBVBlockPos@@@Z
     * @hash   1783068740
     */
    MCAPI static int getMapGrassColor(class BlockSource &, class BlockPos const &);
    /**
     * @symbol ?getMapGrassColor@FoliageColor@@SAHMM@Z
     * @hash   1158965456
     */
    MCAPI static int getMapGrassColor(float, float);

//private:

private:
    /**
     * @symbol ?FOLIAGE_BOTTOM_LEFT@FoliageColor@@0VColor@mce@@B
     * @hash   174092151
     */
    MCAPI static class mce::Color const FOLIAGE_BOTTOM_LEFT;
    /**
     * @symbol ?FOLIAGE_BOTTOM_RIGHT@FoliageColor@@0VColor@mce@@B
     * @hash   -1453057792
     */
    MCAPI static class mce::Color const FOLIAGE_BOTTOM_RIGHT;
    /**
     * @symbol ?FOLIAGE_TOP_LEFT@FoliageColor@@0VColor@mce@@B
     * @hash   -1784821735
     */
    MCAPI static class mce::Color const FOLIAGE_TOP_LEFT;
    /**
     * @symbol ?FOLIAGE_TOP_RIGHT@FoliageColor@@0VColor@mce@@B
     * @hash   -2048923554
     */
    MCAPI static class mce::Color const FOLIAGE_TOP_RIGHT;
    /**
     * @symbol ?GRASS_BOTTOM_LEFT@FoliageColor@@0VColor@mce@@B
     * @hash   -1546438636
     */
    MCAPI static class mce::Color const GRASS_BOTTOM_LEFT;
    /**
     * @symbol ?GRASS_BOTTOM_RIGHT@FoliageColor@@0VColor@mce@@B
     * @hash   1046907779
     */
    MCAPI static class mce::Color const GRASS_BOTTOM_RIGHT;
    /**
     * @symbol ?GRASS_TOP_LEFT@FoliageColor@@0VColor@mce@@B
     * @hash   1777210396
     */
    MCAPI static class mce::Color const GRASS_TOP_LEFT;
    /**
     * @symbol ?GRASS_TOP_RIGHT@FoliageColor@@0VColor@mce@@B
     * @hash   1001735227
     */
    MCAPI static class mce::Color const GRASS_TOP_RIGHT;
    /**
     * @symbol ?mFoliagePalettes@FoliageColor@@0V?$array@V?$unique_ptr@V?$array@H$0BAAAA@@std@@U?$default_delete@V?$array@H$0BAAAA@@std@@@2@@std@@$04@std@@A
     * @hash   -1756074708
     */
    MCAPI static class std::array<std::unique_ptr<class std::array<int, 65536>>, 5> mFoliagePalettes;
    /**
     * @symbol ?mGrassPalettes@FoliageColor@@0V?$array@V?$unique_ptr@V?$array@H$0BAAAA@@std@@U?$default_delete@V?$array@H$0BAAAA@@std@@@2@@std@@$04@std@@A
     * @hash   -1841179983
     */
    MCAPI static class std::array<std::unique_ptr<class std::array<int, 65536>>, 5> mGrassPalettes;

};