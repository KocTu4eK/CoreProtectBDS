/**
 * @file  Mob.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
class UserEntityIdentifierComponent;

#undef BEFORE_EXTRA

/**
 * @brief MC class Mob.
 *
 */
class Mob : public Actor {

#define AFTER_EXTRA
// Add Member There
public:
struct JumpPreventionResult {
    JumpPreventionResult() = delete;
    JumpPreventionResult(JumpPreventionResult const&) = delete;
    JumpPreventionResult(JumpPreventionResult const&&) = delete;
};

public:

    LIAPI bool refreshInventory();

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOB
public:
    class Mob& operator=(class Mob const &) = delete;
    Mob(class Mob const &) = delete;
    Mob() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @symbol ?hasComponent@Mob@@UEBA_NAEBVHashedString@@@Z
     * @hash   -1665806746
     */
    virtual bool hasComponent(class HashedString const &) const;
    /**
     * @vftbl  7
     * @symbol ?outOfWorld@Mob@@MEAAXXZ
     * @hash   -1374870627
     */
    virtual void outOfWorld();
    /**
     * @vftbl  8
     * @symbol ?reloadHardcoded@Mob@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   276383629
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  9
     * @symbol ?reloadHardcodedClient@Mob@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -2061253400
     */
    virtual void reloadHardcodedClient(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  10
     * @symbol ?initializeComponents@Mob@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   914725040
     */
    virtual void initializeComponents(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  13
     * @symbol ?_doInitialMove@Mob@@MEAAXXZ
     * @hash   1300028187
     */
    virtual void _doInitialMove();
    /**
     * @vftbl  14
     * @hash   1731873358
     */
    virtual ~Mob();
    /**
     * @vftbl  30
     * @symbol ?getInterpolatedBodyRot@Mob@@UEBAMM@Z
     * @hash   1419430438
     */
    virtual float getInterpolatedBodyRot(float) const;
    /**
     * @vftbl  31
     * @symbol ?getInterpolatedHeadRot@Mob@@UEBAMM@Z
     * @hash   1962428996
     */
    virtual float getInterpolatedHeadRot(float) const;
    /**
     * @vftbl  32
     * @symbol ?getInterpolatedBodyYaw@Mob@@UEBAMM@Z
     * @hash   -739206226
     */
    virtual float getInterpolatedBodyYaw(float) const;
    /**
     * @vftbl  33
     * @symbol ?getYawSpeedInDegreesPerSecond@Mob@@UEBAMXZ
     * @hash   -815079477
     */
    virtual float getYawSpeedInDegreesPerSecond() const;
    /**
     * @vftbl  36
     * @symbol ?resetInterpolated@Mob@@UEAAXXZ
     * @hash   1047105065
     */
    virtual void resetInterpolated();
    /**
     * @vftbl  40
     * @hash   -246209152
     */
    virtual void __unk_vfn_40();
    /**
     * @vftbl  41
     * @symbol ?blockedByShield@Mob@@UEAAXAEBVActorDamageSource@@AEAVActor@@@Z
     * @hash   -1302123632
     */
    virtual void blockedByShield(class ActorDamageSource const &, class Actor &);
    /**
     * @vftbl  43
     * @symbol ?teleportTo@Mob@@UEAAXAEBVVec3@@_NHH1@Z
     * @hash   2048921853
     */
    virtual void teleportTo(class Vec3 const &, bool, int, int, bool);
    /**
     * @vftbl  48
     * @symbol ?normalTick@Mob@@UEAAXXZ
     * @hash   335147995
     */
    virtual void normalTick();
    /**
     * @vftbl  49
     * @symbol ?baseTick@Mob@@UEAAXXZ
     * @hash   -2052281035
     */
    virtual void baseTick();
    /**
     * @vftbl  50
     * @symbol ?passengerTick@Mob@@MEAAXXZ
     * @hash   -644212201
     */
    virtual void passengerTick();
    /**
     * @vftbl  52
     * @symbol ?startRiding@Mob@@UEAA_NAEAVActor@@@Z
     * @hash   -839445241
     */
    virtual bool startRiding(class Actor &);
    /**
     * @vftbl  53
     * @symbol ?addPassenger@Mob@@UEAAXAEAVActor@@@Z
     * @hash   -1671193881
     */
    virtual void addPassenger(class Actor &);
    /**
     * @vftbl  60
     * @hash   -196162194
     */
    virtual void __unk_vfn_60();
    /**
     * @vftbl  67
     * @hash   -182486203
     */
    virtual void __unk_vfn_67();
    /**
     * @vftbl  81
     * @hash   -130769027
     */
    virtual void __unk_vfn_81();
    /**
     * @vftbl  84
     * @hash   -135209808
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -125227901
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  91
     * @symbol ?isImmobile@Mob@@UEBA_NXZ
     * @hash   1041241848
     */
    virtual bool isImmobile() const;
    /**
     * @vftbl  94
     * @symbol ?isPickable@Mob@@UEAA_NXZ
     * @hash   366021118
     */
    virtual bool isPickable();
    /**
     * @vftbl  95
     * @hash   -105657136
     */
    virtual void __unk_vfn_95();
    /**
     * @vftbl  96
     * @symbol ?isSleeping@Mob@@UEBA_NXZ
     * @hash   -220790451
     */
    virtual bool isSleeping() const;
    /**
     * @vftbl  97
     * @symbol ?setSleeping@Mob@@UEAAX_N@Z
     * @hash   -471522584
     */
    virtual void setSleeping(bool);
    /**
     * @vftbl  98
     * @hash   -102886573
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  100
     * @symbol ?isBlocking@Mob@@UEBA_NXZ
     * @hash   860349639
     */
    virtual bool isBlocking() const;
    /**
     * @vftbl  102
     * @symbol ?isAlive@Mob@@UEBA_NXZ
     * @hash   1781548443
     */
    virtual bool isAlive() const;
    /**
     * @vftbl  105
     * @hash   1335894854
     */
    virtual void __unk_vfn_105();
    /**
     * @vftbl  106
     * @symbol ?isSurfaceMob@Mob@@UEBA_NXZ
     * @hash   -318243483
     */
    virtual bool isSurfaceMob() const;
    /**
     * @vftbl  107
     * @hash   1337741896
     */
    virtual void __unk_vfn_107();
    /**
     * @vftbl  108
     * @hash   1331454073
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1359906400
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  113
     * @symbol ?setTarget@Mob@@UEAAXPEAVActor@@@Z
     * @hash   393563209
     */
    virtual void setTarget(class Actor *);
    /**
     * @vftbl  115
     * @symbol ?attack@Mob@@UEAA_NAEAVActor@@AEBW4ActorDamageCause@@@Z
     * @hash   1278298487
     */
    virtual bool attack(class Actor &, enum class ActorDamageCause const &);
    /**
     * @vftbl  126
     * @symbol ?canPowerJump@Mob@@UEBA_NXZ
     * @hash   1470274795
     */
    virtual bool canPowerJump() const;
    /**
     * @vftbl  128
     * @symbol ?isJumping@Mob@@UEBA_NXZ
     * @hash   -861408110
     */
    virtual bool isJumping() const;
    /**
     * @vftbl  135
     * @symbol ?getBlockDamageCause@Mob@@UEBA?AW4ActorDamageCause@@AEBVBlock@@@Z
     * @hash   798207084
     */
    virtual enum class ActorDamageCause getBlockDamageCause(class Block const &) const;
    /**
     * @vftbl  136
     * @symbol ?animateHurt@Mob@@UEAAXXZ
     * @hash   1642845239
     */
    virtual void animateHurt();
    /**
     * @vftbl  137
     * @symbol ?doFireHurt@Mob@@UEAA_NH@Z
     * @hash   -1393370154
     */
    virtual bool doFireHurt(int);
    /**
     * @vftbl  141
     * @symbol ?handleEntityEvent@Mob@@UEAAXW4ActorEvent@@H@Z
     * @hash   -1666801162
     */
    virtual void handleEntityEvent(enum class ActorEvent, int);
    /**
     * @vftbl  155
     * @symbol ?getArmorMaterialTypeInSlot@Mob@@UEBA?AW4ArmorMaterialType@@W4ArmorSlot@@@Z
     * @hash   407673672
     */
    virtual enum class ArmorMaterialType getArmorMaterialTypeInSlot(enum class ArmorSlot) const;
    /**
     * @vftbl  156
     * @symbol ?getArmorMaterialTextureTypeInSlot@Mob@@UEBA?AW4ArmorTextureType@@W4ArmorSlot@@@Z
     * @hash   -694286167
     */
    virtual enum class ArmorTextureType getArmorMaterialTextureTypeInSlot(enum class ArmorSlot) const;
    /**
     * @vftbl  157
     * @symbol ?getArmorColorInSlot@Mob@@UEBAMW4ArmorSlot@@H@Z
     * @hash   -1561351459
     */
    virtual float getArmorColorInSlot(enum class ArmorSlot, int) const;
    /**
     * @vftbl  159
     * @symbol ?setEquippedSlot@Mob@@UEAAXW4EquipmentSlot@@AEBVItemStack@@@Z
     * @hash   -1212369812
     */
    virtual void setEquippedSlot(enum class EquipmentSlot, class ItemStack const &);
    /**
     * @vftbl  173
     * @symbol ?canFreeze@Mob@@UEBA_NXZ
     * @hash   -943786737
     */
    virtual bool canFreeze() const;
    /**
     * @vftbl  180
     * @symbol ?canChangeDimensionsUsingPortal@Mob@@UEBA_NXZ
     * @hash   -1231499429
     */
    virtual bool canChangeDimensionsUsingPortal() const;
    /**
     * @vftbl  181
     * @hash   1511261978
     */
    virtual void __unk_vfn_181();
    /**
     * @vftbl  185
     * @symbol ?causeFallDamage@Mob@@MEAAXMMVActorDamageSource@@@Z
     * @hash   -541414375
     */
    virtual void causeFallDamage(float, float, class ActorDamageSource);
    /**
     * @vftbl  193
     * @symbol ?canBePulledIntoVehicle@Mob@@UEBA_NXZ
     * @hash   -280245667
     */
    virtual bool canBePulledIntoVehicle() const;
    /**
     * @vftbl  194
     * @symbol ?inCaravan@Mob@@UEBA_NXZ
     * @hash   -656932935
     */
    virtual bool inCaravan() const;
    /**
     * @vftbl  195
     * @hash   1593557213
     */
    virtual void __unk_vfn_195();
    /**
     * @vftbl  199
     * @symbol ?stopRiding@Mob@@UEAAX_N00@Z
     * @hash   -1083177186
     */
    virtual void stopRiding(bool, bool, bool);
    /**
     * @vftbl  202
     * @symbol ?buildDebugInfo@Mob@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   1080222516
     */
    virtual void buildDebugInfo(std::string &) const;
    /**
     * @vftbl  207
     * @symbol ?getDeathTime@Mob@@UEBAHXZ
     * @hash   1463857478
     */
    virtual int getDeathTime() const;
    /**
     * @vftbl  218
     * @symbol ?swing@Mob@@UEAAXXZ
     * @hash   1233296005
     */
    virtual void swing();
    /**
     * @vftbl  220
     * @hash   -2032751088
     */
    virtual void __unk_vfn_220();
    /**
     * @vftbl  221
     * @hash   -2018004543
     */
    virtual void __unk_vfn_221();
    /**
     * @vftbl  225
     * @symbol ?getYHeadRot@Mob@@UEBAMXZ
     * @hash   1140884162
     */
    virtual float getYHeadRot() const;
    /**
     * @vftbl  226
     * @symbol ?setYHeadRot@Mob@@UEAAXM@Z
     * @hash   745223611
     */
    virtual void setYHeadRot(float);
    /**
     * @vftbl  227
     * @symbol ?getYHeadRotO@Mob@@UEBAMXZ
     * @hash   2129716313
     */
    virtual float getYHeadRotO() const;
    /**
     * @vftbl  228
     * @symbol ?setYHeadRotO@Mob@@UEAAXM@Z
     * @hash   36252604
     */
    virtual void setYHeadRotO(float);
    /**
     * @vftbl  247
     * @hash   -2005177115
     */
    virtual void __unk_vfn_247();
    /**
     * @vftbl  250
     * @hash   -739509363
     */
    virtual void __unk_vfn_250();
    /**
     * @vftbl  251
     * @symbol ?kill@Mob@@UEAAXXZ
     * @hash   792600773
     */
    virtual void kill();
    /**
     * @vftbl  252
     * @symbol ?die@Mob@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   -344840877
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  253
     * @symbol ?shouldDropDeathLoot@Mob@@UEBA_NXZ
     * @hash   -938808158
     */
    virtual bool shouldDropDeathLoot() const;
    /**
     * @vftbl  266
     * @symbol ?updateEntitySpecificMolangVariables@Mob@@MEAAXAEAVRenderParams@@@Z
     * @hash   726159423
     */
    virtual void updateEntitySpecificMolangVariables(class RenderParams &);
    /**
     * @vftbl  268
     * @hash   -1904234636
     */
    virtual void __unk_vfn_268();
    /**
     * @vftbl  269
     * @symbol ?_hurt@Mob@@MEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   1089089072
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  272
     * @symbol ?readAdditionalSaveData@Mob@@MEAAXAEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   1120160960
     */
    virtual void readAdditionalSaveData(class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  273
     * @symbol ?addAdditionalSaveData@Mob@@MEBAXAEAVCompoundTag@@@Z
     * @hash   1918007373
     */
    virtual void addAdditionalSaveData(class CompoundTag &) const;
    /**
     * @vftbl  274
     * @symbol ?_playStepSound@Mob@@MEAAXAEBVBlockPos@@AEBVBlock@@@Z
     * @hash   1671669698
     */
    virtual void _playStepSound(class BlockPos const &, class Block const &);
    /**
     * @vftbl  276
     * @hash   -1870241183
     */
    virtual void __unk_vfn_276();
    /**
     * @vftbl  281
     * @symbol ?_removePassenger@Mob@@MEAAXAEBUActorUniqueID@@_N11@Z
     * @hash   -841139832
     */
    virtual void _removePassenger(struct ActorUniqueID const &, bool, bool, bool);
    /**
     * @vftbl  282
     * @symbol ?_onSizeUpdated@Mob@@MEAAXXZ
     * @hash   -918818452
     */
    virtual void _onSizeUpdated();
    /**
     * @vftbl  283
     * @hash   -1894354595
     */
    virtual void __unk_vfn_283();
    /**
     * @vftbl  284
     * @symbol ?knockback@Mob@@UEAAXPEAVActor@@HMMMMM@Z
     * @hash   1746515060
     */
    virtual void knockback(class Actor *, int, float, float, float, float, float);
    /**
     * @vftbl  285
     * @symbol ?spawnAnim@Mob@@UEAAXXZ
     * @hash   1070444051
     */
    virtual void spawnAnim();
    /**
     * @vftbl  286
     * @symbol ?setSprinting@Mob@@UEAAX_N@Z
     * @hash   57641247
     */
    virtual void setSprinting(bool);
    /**
     * @vftbl  287
     * @symbol ?getHurtSound@Mob@@UEAA?AW4LevelSoundEvent@@XZ
     * @hash   -48974014
     */
    virtual enum class LevelSoundEvent getHurtSound();
    /**
     * @vftbl  288
     * @symbol ?getDeathSound@Mob@@UEAA?AW4LevelSoundEvent@@XZ
     * @hash   8708281
     */
    virtual enum class LevelSoundEvent getDeathSound();
    /**
     * @vftbl  289
     * @symbol ?getSpeed@Mob@@UEBAMXZ
     * @hash   -1375571633
     */
    virtual float getSpeed() const;
    /**
     * @vftbl  290
     * @symbol ?setSpeed@Mob@@UEAAXM@Z
     * @hash   530645430
     */
    virtual void setSpeed(float);
    /**
     * @vftbl  291
     * @symbol ?hurtEffects@Mob@@UEAAXAEBVActorDamageSource@@M_N1@Z
     * @hash   -1523682054
     */
    virtual void hurtEffects(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  292
     * @symbol ?getMeleeWeaponDamageBonus@Mob@@UEAAMPEAV1@@Z
     * @hash   -1669791605
     */
    virtual float getMeleeWeaponDamageBonus(class Mob *);
    /**
     * @vftbl  293
     * @symbol ?getMeleeKnockbackBonus@Mob@@UEAAHXZ
     * @hash   -912826082
     */
    virtual int getMeleeKnockbackBonus();
    /**
     * @vftbl  294
     * @symbol ?travel@Mob@@UEAAXMMM@Z
     * @hash   531835697
     */
    virtual void travel(float, float, float);
    /**
     * @vftbl  295
     * @symbol ?travel@Mob@@UEBAXAEAUIMobMovementProxy@@MMM@Z
     * @hash   1236661099
     */
    virtual void travel(struct IMobMovementProxy &, float, float, float) const;
    /**
     * @vftbl  296
     * @symbol ?applyFinalFriction@Mob@@UEAAXM_N@Z
     * @hash   -754033917
     */
    virtual void applyFinalFriction(float, bool);
    /**
     * @vftbl  297
     * @symbol ?aiStep@Mob@@UEAAXXZ
     * @hash   1313447227
     */
    virtual void aiStep();
    /**
     * @vftbl  298
     * @symbol ?aiStep@Mob@@UEBAXAEAUIMobMovementProxy@@@Z
     * @hash   1300803835
     */
    virtual void aiStep(struct IMobMovementProxy &) const;
    /**
     * @vftbl  299
     * @symbol ?pushActors@Mob@@UEAAXXZ
     * @hash   -1053523601
     */
    virtual void pushActors();
    /**
     * @vftbl  300
     * @symbol ?lookAt@Mob@@UEAAXPEAVActor@@MM@Z
     * @hash   1026251114
     */
    virtual void lookAt(class Actor *, float, float);
    /**
     * @vftbl  301
     * @symbol ?isLookingAtAnEntity@Mob@@UEAA_NXZ
     * @hash   -1737955771
     */
    virtual bool isLookingAtAnEntity();
    /**
     * @vftbl  302
     * @symbol ?checkSpawnRules@Mob@@UEAA_N_N@Z
     * @hash   -154205489
     */
    virtual bool checkSpawnRules(bool);
    /**
     * @vftbl  303
     * @symbol ?checkSpawnObstruction@Mob@@UEBA_NXZ
     * @hash   -1061801499
     */
    virtual bool checkSpawnObstruction() const;
    /**
     * @vftbl  304
     * @symbol ?getAttackAnim@Mob@@UEAAMM@Z
     * @hash   -2066304540
     */
    virtual float getAttackAnim(float);
    /**
     * @vftbl  305
     * @symbol ?getItemUseDuration@Mob@@UEBAHXZ
     * @hash   863628813
     */
    virtual int getItemUseDuration() const;
    /**
     * @vftbl  306
     * @symbol ?getItemUseStartupProgress@Mob@@UEBAMXZ
     * @hash   645618810
     */
    virtual float getItemUseStartupProgress() const;
    /**
     * @vftbl  307
     * @symbol ?getItemUseIntervalProgress@Mob@@UEBAMXZ
     * @hash   -458359042
     */
    virtual float getItemUseIntervalProgress() const;
    /**
     * @vftbl  308
     * @symbol ?getItemUseIntervalAxis@Mob@@UEBAHXZ
     * @hash   -1677382977
     */
    virtual int getItemUseIntervalAxis() const;
    /**
     * @vftbl  309
     * @symbol ?getTimeAlongSwing@Mob@@UEBAHXZ
     * @hash   259062991
     */
    virtual int getTimeAlongSwing() const;
    /**
     * @vftbl  310
     * @hash   -1210025534
     */
    virtual void __unk_vfn_310();
    /**
     * @vftbl  311
     * @symbol ?getMaxHeadXRot@Mob@@UEAAMXZ
     * @hash   1130040268
     */
    virtual float getMaxHeadXRot();
    /**
     * @vftbl  312
     * @symbol ?isAlliedTo@Mob@@UEAA_NPEAV1@@Z
     * @hash   1510042379
     */
    virtual bool isAlliedTo(class Mob *);
    /**
     * @vftbl  313
     * @symbol ?doHurtTarget@Mob@@UEAA_NPEAVActor@@AEBW4ActorDamageCause@@@Z
     * @hash   1997701662
     */
    virtual bool doHurtTarget(class Actor *, enum class ActorDamageCause const &);
    /**
     * @vftbl  314
     * @hash   -1156359450
     */
    virtual void __unk_vfn_314();
    /**
     * @vftbl  315
     * @symbol ?leaveCaravan@Mob@@UEAAXXZ
     * @hash   1630620358
     */
    virtual void leaveCaravan();
    /**
     * @vftbl  316
     * @symbol ?joinCaravan@Mob@@UEAAXPEAV1@@Z
     * @hash   -1776916227
     */
    virtual void joinCaravan(class Mob *);
    /**
     * @vftbl  317
     * @symbol ?hasCaravanTail@Mob@@UEBA_NXZ
     * @hash   1520215140
     */
    virtual bool hasCaravanTail() const;
    /**
     * @vftbl  318
     * @symbol ?getCaravanHead@Mob@@UEBA?AUActorUniqueID@@XZ
     * @hash   94847961
     */
    virtual struct ActorUniqueID getCaravanHead() const;
    /**
     * @vftbl  319
     * @symbol ?getArmorValue@Mob@@UEBAHXZ
     * @hash   -2010925229
     */
    virtual int getArmorValue() const;
    /**
     * @vftbl  320
     * @symbol ?getArmorCoverPercentage@Mob@@UEBAMXZ
     * @hash   -1950757946
     */
    virtual float getArmorCoverPercentage() const;
    /**
     * @vftbl  321
     * @symbol ?getToughnessValue@Mob@@UEBAHXZ
     * @hash   -1116572704
     */
    virtual int getToughnessValue() const;
    /**
     * @vftbl  322
     * @symbol ?hurtArmorSlots@Mob@@UEAAXAEBVActorDamageSource@@HV?$bitset@$03@std@@@Z
     * @hash   1867061124
     */
    virtual void hurtArmorSlots(class ActorDamageSource const &, int, class std::bitset<4>);
    /**
     * @vftbl  323
     * @symbol ?setDamagedArmor@Mob@@UEAAXW4ArmorSlot@@AEBVItemStack@@@Z
     * @hash   -670059350
     */
    virtual void setDamagedArmor(enum class ArmorSlot, class ItemStack const &);
    /**
     * @vftbl  324
     * @symbol ?sendArmorDamage@Mob@@UEAAXV?$bitset@$03@std@@@Z
     * @hash   1993459400
     */
    virtual void sendArmorDamage(class std::bitset<4>);
    /**
     * @vftbl  325
     * @symbol ?sendArmor@Mob@@UEAAXV?$bitset@$03@std@@@Z
     * @hash   154256487
     */
    virtual void sendArmor(class std::bitset<4>);
    /**
     * @vftbl  326
     * @symbol ?containerChanged@Mob@@UEAAXH@Z
     * @hash   -1370261851
     */
    virtual void containerChanged(int);
    /**
     * @vftbl  327
     * @symbol ?updateEquipment@Mob@@UEAAXXZ
     * @hash   233060316
     */
    virtual void updateEquipment();
    /**
     * @vftbl  328
     * @symbol ?clearEquipment@Mob@@UEAAHXZ
     * @hash   -199964627
     */
    virtual int clearEquipment();
    /**
     * @vftbl  329
     * @symbol ?getAllArmorID@Mob@@UEBA?AV?$vector@HV?$allocator@H@std@@@std@@XZ
     * @hash   -259723442
     */
    virtual std::vector<int> getAllArmorID() const;
    /**
     * @vftbl  330
     * @symbol ?getAllHand@Mob@@UEBA?AV?$vector@PEBVItemStack@@V?$allocator@PEBVItemStack@@@std@@@std@@XZ
     * @hash   -991726109
     */
    virtual std::vector<class ItemStack const *> getAllHand() const;
    /**
     * @vftbl  331
     * @symbol ?getAllEquipment@Mob@@UEBA?AV?$vector@PEBVItemStack@@V?$allocator@PEBVItemStack@@@std@@@std@@XZ
     * @hash   373491740
     */
    virtual std::vector<class ItemStack const *> getAllEquipment() const;
    /**
     * @vftbl  332
     * @symbol ?getArmorTypeHash@Mob@@UEAAHXZ
     * @hash   -1487397299
     */
    virtual int getArmorTypeHash();
    /**
     * @vftbl  333
     * @symbol ?dropEquipmentOnDeath@Mob@@UEAAXAEBVActorDamageSource@@H@Z
     * @hash   312094514
     */
    virtual void dropEquipmentOnDeath(class ActorDamageSource const &, int);
    /**
     * @vftbl  334
     * @symbol ?dropEquipmentOnDeath@Mob@@UEAAXXZ
     * @hash   779505789
     */
    virtual void dropEquipmentOnDeath();
    /**
     * @vftbl  335
     * @symbol ?clearVanishEnchantedItemsOnDeath@Mob@@UEAAXXZ
     * @hash   1307632316
     */
    virtual void clearVanishEnchantedItemsOnDeath();
    /**
     * @vftbl  336
     * @symbol ?sendInventory@Mob@@UEAAX_N@Z
     * @hash   1904520577
     */
    virtual void sendInventory(bool);
    /**
     * @vftbl  337
     * @symbol ?getDamageAfterEnchantReduction@Mob@@UEBAMAEBVActorDamageSource@@M@Z
     * @hash   -1477238105
     */
    virtual float getDamageAfterEnchantReduction(class ActorDamageSource const &, float) const;
    /**
     * @vftbl  338
     * @symbol ?getDamageAfterArmorReduction@Mob@@UEBAMAEBVActorDamageSource@@M@Z
     * @hash   308394561
     */
    virtual float getDamageAfterArmorReduction(class ActorDamageSource const &, float) const;
    /**
     * @vftbl  339
     * @symbol ?getDamageAfterResistanceEffect@Mob@@UEBAMAEBVActorDamageSource@@M@Z
     * @hash   -1233522153
     */
    virtual float getDamageAfterResistanceEffect(class ActorDamageSource const &, float) const;
    /**
     * @vftbl  340
     * @symbol ?createAIGoals@Mob@@UEAA_NXZ
     * @hash   1993634741
     */
    virtual bool createAIGoals();
    /**
     * @vftbl  341
     * @symbol ?onBorn@Mob@@UEAAXAEAVActor@@0@Z
     * @hash   1391684623
     */
    virtual void onBorn(class Actor &, class Actor &);
    /**
     * @vftbl  342
     * @symbol ?setItemSlot@Mob@@UEAA_NW4EquipmentSlot@@AEBVItemStack@@@Z
     * @hash   -1084688494
     */
    virtual bool setItemSlot(enum class EquipmentSlot, class ItemStack const &);
    /**
     * @vftbl  343
     * @symbol ?setTransitioningSitting@Mob@@UEAAX_N@Z
     * @hash   -1849232828
     */
    virtual void setTransitioningSitting(bool);
    /**
     * @vftbl  344
     * @symbol ?attackAnimation@Mob@@UEAAXPEAVActor@@M@Z
     * @hash   1677803570
     */
    virtual void attackAnimation(class Actor *, float);
    /**
     * @vftbl  345
     * @symbol ?getAttackTime@Mob@@UEAAHXZ
     * @hash   -800208425
     */
    virtual int getAttackTime();
    /**
     * @vftbl  346
     * @symbol ?_getWalkTargetValue@Mob@@UEAAMAEBVBlockPos@@@Z
     * @hash   -546886533
     */
    virtual float _getWalkTargetValue(class BlockPos const &);
    /**
     * @vftbl  347
     * @symbol ?canExistWhenDisallowMob@Mob@@UEBA_NXZ
     * @hash   -832576132
     */
    virtual bool canExistWhenDisallowMob() const;
    /**
     * @vftbl  348
     * @hash   -1073989257
     */
    virtual void __unk_vfn_348();
    /**
     * @vftbl  349
     * @symbol ?ascendLadder@Mob@@UEAAXXZ
     * @hash   916212387
     */
    virtual void ascendLadder();
    /**
     * @vftbl  350
     * @symbol ?ascendBlockByJumping@Mob@@UEAAXXZ
     * @hash   -1823028687
     */
    virtual void ascendBlockByJumping();
    /**
     * @vftbl  351
     * @symbol ?descendBlockByCrouching@Mob@@UEAAXXZ
     * @hash   -950092811
     */
    virtual void descendBlockByCrouching();
    /**
     * @vftbl  352
     * @symbol ?dropContainer@Mob@@UEAAXXZ
     * @hash   -1346887079
     */
    virtual void dropContainer();
    /**
     * @vftbl  353
     * @symbol ?initBodyControl@Mob@@MEAA?AV?$unique_ptr@VBodyControl@@U?$default_delete@VBodyControl@@@std@@@std@@XZ
     * @hash   1432565190
     */
    virtual std::unique_ptr<class BodyControl> initBodyControl();
    /**
     * @vftbl  354
     * @symbol ?jumpFromGround@Mob@@MEAAXXZ
     * @hash   1787296815
     */
    virtual void jumpFromGround();
    /**
     * @vftbl  355
     * @symbol ?jumpFromGround@Mob@@MEBAXAEAUIMobMovementProxy@@@Z
     * @hash   -470284537
     */
    virtual void jumpFromGround(struct IMobMovementProxy &) const;
    /**
     * @vftbl  356
     * @symbol ?updateAi@Mob@@MEAAXXZ
     * @hash   1263652689
     */
    virtual void updateAi();
    /**
     * @vftbl  357
     * @symbol ?newServerAiStep@Mob@@MEAAXXZ
     * @hash   854894199
     */
    virtual void newServerAiStep();
    /**
     * @vftbl  358
     * @symbol ?_serverAiMobStep@Mob@@MEAAXXZ
     * @hash   -374407470
     */
    virtual void _serverAiMobStep();
    /**
     * @vftbl  359
     * @symbol ?dropBags@Mob@@MEAAXXZ
     * @hash   -81665270
     */
    virtual void dropBags();
    /**
     * @vftbl  360
     * @symbol ?tickDeath@Mob@@MEAAXXZ
     * @hash   -368137433
     */
    virtual void tickDeath();
    /**
     * @vftbl  361
     * @symbol ?updateGliding@Mob@@MEAAXXZ
     * @hash   2059304873
     */
    virtual void updateGliding();
    /**
     * @vftbl  362
     * @hash   -1022272081
     */
    virtual void __unk_vfn_362();
    /**
     * @vftbl  363
     * @symbol ?_getAdjustedAABBForSpawnCheck@Mob@@MEBA?AVAABB@@AEBV2@AEBVVec3@@@Z
     * @hash   -978765782
     */
    virtual class AABB _getAdjustedAABBForSpawnCheck(class AABB const &, class Vec3 const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MOB
    /**
     * @symbol ?_allowAscendingScaffolding@Mob@@MEBA_NXZ
     * @hash   1173870879
     */
    MCVAPI bool _allowAscendingScaffolding() const;
    /**
     * @symbol ?ate@Mob@@UEAAXXZ
     * @hash   -51583815
     */
    MCVAPI void ate();
    /**
     * @symbol ?canBeControlledByPassenger@Mob@@UEAA_NXZ
     * @hash   1086575931
     */
    MCVAPI bool canBeControlledByPassenger();
    /**
     * @symbol ?isShootable@Mob@@UEAA_NXZ
     * @hash   1120656408
     */
    MCVAPI bool isShootable();
    /**
     * @symbol ?renderDebugServerState@Mob@@UEAAXAEBVOptions@@@Z
     * @hash   -365011117
     */
    MCVAPI void renderDebugServerState(class Options const &);
    /**
     * @symbol ?useNewAi@Mob@@UEBA_NXZ
     * @hash   101247497
     */
    MCVAPI bool useNewAi() const;
#endif
    /**
     * @symbol ??0Mob@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   505000204
     */
    MCAPI Mob(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ??0Mob@@QEAA@AEAVLevel@@AEAVEntityContext@@@Z
     * @hash   -2100454860
     */
    MCAPI Mob(class Level &, class EntityContext &);
    /**
     * @symbol ?_endJump@Mob@@QEAAXXZ
     * @hash   614862567
     */
    MCAPI void _endJump();
    /**
     * @symbol ?addSpeedModifier@Mob@@QEAAXAEBVUUID@mce@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z
     * @hash   1785252796
     */
    MCAPI void addSpeedModifier(class mce::UUID const &, std::string const &, float);
    /**
     * @symbol ?calcMoveRelativeSpeed@Mob@@QEAAMW4TravelType@@@Z
     * @hash   1588210371
     */
    MCAPI float calcMoveRelativeSpeed(enum class TravelType);
    /**
     * @symbol ?checkForPostHitDamageImmunity@Mob@@QEAA_NMAEBVActorDamageSource@@@Z
     * @hash   475688308
     */
    MCAPI bool checkForPostHitDamageImmunity(float, class ActorDamageSource const &);
    /**
     * @symbol ?checkTotemDeathProtection@Mob@@QEAA_NAEBVActorDamageSource@@@Z
     * @hash   2132528633
     */
    MCAPI bool checkTotemDeathProtection(class ActorDamageSource const &);
    /**
     * @symbol ?createAI@Mob@@QEAAXV?$vector@UGoalDefinition@@V?$allocator@UGoalDefinition@@@std@@@std@@@Z
     * @hash   1655412126
     */
    MCAPI void createAI(std::vector<struct GoalDefinition>);
    /**
     * @symbol ?discardFriction@Mob@@QEBA_NXZ
     * @hash   -1692806226
     */
    MCAPI bool discardFriction() const;
    /**
     * @symbol ?emitJumpPreventedEvent@Mob@@QEAAXAEBVBlockPos@@@Z
     * @hash   1125834746
     */
    MCAPI void emitJumpPreventedEvent(class BlockPos const &);
    /**
     * @symbol ?frostWalk@Mob@@QEAAXXZ
     * @hash   -169408833
     */
    MCAPI void frostWalk();
    /**
     * @symbol ?getBoundOrigin@Mob@@QEBA?AVBlockPos@@XZ
     * @hash   -1009706100
     */
    MCAPI class BlockPos getBoundOrigin() const;
    /**
     * @symbol ?getCaravanSize@Mob@@QEBAHXZ
     * @hash   2023217128
     */
    MCAPI int getCaravanSize() const;
    /**
     * @symbol ?getEatCounter@Mob@@QEBAHXZ
     * @hash   1056804204
     */
    MCAPI int getEatCounter() const;
    /**
     * @symbol ?getFirstCaravanHead@Mob@@QEAAPEAV1@XZ
     * @hash   -377840264
     */
    MCAPI class Mob * getFirstCaravanHead();
    /**
     * @symbol ?getFlightSpeed@Mob@@QEBAMXZ
     * @hash   592807590
     */
    MCAPI float getFlightSpeed() const;
    /**
     * @symbol ?getFrictionModifier@Mob@@QEBAMXZ
     * @hash   1299668724
     */
    MCAPI float getFrictionModifier() const;
    /**
     * @symbol ?getGlidingTicks@Mob@@QEBAHXZ
     * @hash   -764040964
     */
    MCAPI int getGlidingTicks() const;
    /**
     * @symbol ?getItemSlot@Mob@@QEBAAEBVItemStack@@W4EquipmentSlot@@@Z
     * @hash   -479748101
     */
    MCAPI class ItemStack const & getItemSlot(enum class EquipmentSlot) const;
    /**
     * @symbol ?getJumpEffectAmplifierValue@Mob@@QEAAMXZ
     * @hash   -181924366
     */
    MCAPI float getJumpEffectAmplifierValue();
    /**
     * @symbol ?getJumpMultiplier@Mob@@QEAAMXZ
     * @hash   -410757246
     */
    MCAPI float getJumpMultiplier();
    /**
     * @symbol ?getJumpPower@Mob@@QEBAMXZ
     * @hash   -1938508570
     */
    MCAPI float getJumpPower() const;
    /**
     * @symbol ?getJumpPrevention@Mob@@QEAA?AUJumpPreventionResult@@XZ
     * @hash   2139817314
     */
    MCAPI struct JumpPreventionResult getJumpPrevention();
    /**
     * @symbol ?getJumpTicks@Mob@@QEBAHXZ
     * @hash   878095978
     */
    MCAPI int getJumpTicks() const;
    /**
     * @symbol ?getMovementComponentCurrentSpeed@Mob@@QEBAMXZ
     * @hash   136887632
     */
    MCAPI float getMovementComponentCurrentSpeed() const;
    /**
     * @symbol ?getNoActionTime@Mob@@QEBAHXZ
     * @hash   -547934036
     */
    MCAPI int getNoActionTime() const;
    /**
     * @symbol ?getPassengerLockedBodyRot@Mob@@QEBAMXZ
     * @hash   -945100700
     */
    MCAPI float getPassengerLockedBodyRot() const;
    /**
     * @symbol ?getPassengerRotLimit@Mob@@QEBAMXZ
     * @hash   935251540
     */
    MCAPI float getPassengerRotLimit() const;
    /**
     * @symbol ?getRollCounter@Mob@@QEBAHXZ
     * @hash   1201649496
     */
    MCAPI int getRollCounter() const;
    /**
     * @symbol ?getSwimSpeedMultiplier@Mob@@QEBAMXZ
     * @hash   -2026248360
     */
    MCAPI float getSwimSpeedMultiplier() const;
    /**
     * @symbol ?getTargetCaptain@Mob@@QEBA?AUActorUniqueID@@XZ
     * @hash   -154873214
     */
    MCAPI struct ActorUniqueID getTargetCaptain() const;
    /**
     * @symbol ?getTravelType@Mob@@QEAA?AW4TravelType@@XZ
     * @hash   1709476814
     */
    MCAPI enum class TravelType getTravelType();
    /**
     * @symbol ?getYRotA@Mob@@QEBAMXZ
     * @hash   -1615459202
     */
    MCAPI float getYRotA() const;
    /**
     * @symbol ?getZza@Mob@@QEBAMXZ
     * @hash   2010726778
     */
    MCAPI float getZza() const;
    /**
     * @symbol ?hasBoundOrigin@Mob@@QEBA_NXZ
     * @hash   -1148488960
     */
    MCAPI bool hasBoundOrigin() const;
    /**
     * @symbol ?hurtArmor@Mob@@QEAAXAEBVActorDamageSource@@H@Z
     * @hash   -481973967
     */
    MCAPI void hurtArmor(class ActorDamageSource const &, int);
    /**
     * @symbol ?isAbleToMove@Mob@@QEBA_NXZ
     * @hash   1562195552
     */
    MCAPI bool isAbleToMove() const;
    /**
     * @symbol ?isEating@Mob@@QEBA_NXZ
     * @hash   1786770704
     */
    MCAPI bool isEating() const;
    /**
     * @symbol ?isFrostWalking@Mob@@QEBA_NXZ
     * @hash   1702899584
     */
    MCAPI bool isFrostWalking() const;
    /**
     * @symbol ?isGliding@Mob@@QEBA_NXZ
     * @hash   1140091518
     */
    MCAPI bool isGliding() const;
    /**
     * @symbol ?isLayingEgg@Mob@@QEBA_NXZ
     * @hash   138976974
     */
    MCAPI bool isLayingEgg() const;
    /**
     * @symbol ?isPregnant@Mob@@QEBA_NXZ
     * @hash   1630239248
     */
    MCAPI bool isPregnant() const;
    /**
     * @symbol ?isRolling@Mob@@QEBA_NXZ
     * @hash   -1807503298
     */
    MCAPI bool isRolling() const;
    /**
     * @symbol ?isSprinting@Mob@@QEBA_NXZ
     * @hash   -1947985714
     */
    MCAPI bool isSprinting() const;
    /**
     * @symbol ?isTransitioningSitting@Mob@@QEBA_NXZ
     * @hash   -1197143120
     */
    MCAPI bool isTransitioningSitting() const;
    /**
     * @symbol ?onPlayerDimensionChanged@Mob@@QEAAXPEAVPlayer@@V?$AutomaticID@VDimension@@H@@1@Z
     * @hash   1810723241
     */
    MCAPI void onPlayerDimensionChanged(class Player *, class AutomaticID<class Dimension, int>, class AutomaticID<class Dimension, int>);
    /**
     * @symbol ?onPlayerJump@Mob@@QEAAXH@Z
     * @hash   1849541612
     */
    MCAPI void onPlayerJump(int);
    /**
     * @symbol ?removeSpeedModifier@Mob@@QEAAXAEBVUUID@mce@@@Z
     * @hash   -952566330
     */
    MCAPI void removeSpeedModifier(class mce::UUID const &);
    /**
     * @symbol ?resetAttributes@Mob@@QEAAXXZ
     * @hash   -1450859071
     */
    MCAPI void resetAttributes();
    /**
     * @symbol ?resetNoActionTime@Mob@@QEAAXXZ
     * @hash   1450802267
     */
    MCAPI void resetNoActionTime();
    /**
     * @symbol ?sendArmorDamageSlot@Mob@@QEAAXW4ArmorSlot@@@Z
     * @hash   -1737839020
     */
    MCAPI void sendArmorDamageSlot(enum class ArmorSlot);
    /**
     * @symbol ?sendArmorSlot@Mob@@QEAAXW4ArmorSlot@@@Z
     * @hash   -480282734
     */
    MCAPI void sendArmorSlot(enum class ArmorSlot);
    /**
     * @symbol ?setEatCounter@Mob@@QEAAXH@Z
     * @hash   -92929494
     */
    MCAPI void setEatCounter(int);
    /**
     * @symbol ?setEating@Mob@@QEAAX_N@Z
     * @hash   1791321790
     */
    MCAPI void setEating(bool);
    /**
     * @symbol ?setFlightSpeed@Mob@@QEAAXM@Z
     * @hash   -124898356
     */
    MCAPI void setFlightSpeed(float);
    /**
     * @symbol ?setFrictionModifier@Mob@@QEAAXM@Z
     * @hash   745400910
     */
    MCAPI void setFrictionModifier(float);
    /**
     * @symbol ?setIsLayingEgg@Mob@@QEAAX_N@Z
     * @hash   -730895860
     */
    MCAPI void setIsLayingEgg(bool);
    /**
     * @symbol ?setIsPregnant@Mob@@QEAAX_N@Z
     * @hash   1427367678
     */
    MCAPI void setIsPregnant(bool);
    /**
     * @symbol ?setJumpTicks@Mob@@QEAAXH@Z
     * @hash   -1565677700
     */
    MCAPI void setJumpTicks(int);
    /**
     * @symbol ?setJumpVelRedux@Mob@@QEAAX_N@Z
     * @hash   -1033940082
     */
    MCAPI void setJumpVelRedux(bool);
    /**
     * @symbol ?setJumping@Mob@@QEAAX_N@Z
     * @hash   1009265708
     */
    MCAPI void setJumping(bool);
    /**
     * @symbol ?setMovementComponentCurrentSpeed@Mob@@QEAAXM@Z
     * @hash   -2097611262
     */
    MCAPI void setMovementComponentCurrentSpeed(float);
    /**
     * @symbol ?setNaturallySpawned@Mob@@QEAAX_N@Z
     * @hash   -176475986
     */
    MCAPI void setNaturallySpawned(bool);
    /**
     * @symbol ?setPassengerLockedBodyRot@Mob@@QEAAXM@Z
     * @hash   1670282382
     */
    MCAPI void setPassengerLockedBodyRot(float);
    /**
     * @symbol ?setPassengerRotLimit@Mob@@QEAAXM@Z
     * @hash   -589459986
     */
    MCAPI void setPassengerRotLimit(float);
    /**
     * @symbol ?setRolling@Mob@@QEAAX_N@Z
     * @hash   910770460
     */
    MCAPI void setRolling(bool);
    /**
     * @symbol ?setSpawnMethod@Mob@@QEAAXW4MobSpawnMethod@@@Z
     * @hash   63694270
     */
    MCAPI void setSpawnMethod(enum class MobSpawnMethod);
    /**
     * @symbol ?setSpeedModifier@Mob@@QEAAXM@Z
     * @hash   1921176126
     */
    MCAPI void setSpeedModifier(float);
    /**
     * @symbol ?setSurfaceMob@Mob@@QEAAX_N@Z
     * @hash   955188878
     */
    MCAPI void setSurfaceMob(bool);
    /**
     * @symbol ?setSwimSpeedMultiplier@Mob@@QEAAXM@Z
     * @hash   333371802
     */
    MCAPI void setSwimSpeedMultiplier(float);
    /**
     * @symbol ?setTargetCaptain@Mob@@QEAAXUActorUniqueID@@@Z
     * @hash   79790480
     */
    MCAPI void setTargetCaptain(struct ActorUniqueID);
    /**
     * @symbol ?setXxa@Mob@@QEAAXM@Z
     * @hash   -944056408
     */
    MCAPI void setXxa(float);
    /**
     * @symbol ?setYRotA@Mob@@QEAAXM@Z
     * @hash   372188052
     */
    MCAPI void setYRotA(float);
    /**
     * @symbol ?setYya@Mob@@QEAAXM@Z
     * @hash   2042556456
     */
    MCAPI void setYya(float);
    /**
     * @symbol ?setZza@Mob@@QEAAXM@Z
     * @hash   734155896
     */
    MCAPI void setZza(float);
    /**
     * @symbol ?snapToYBodyRot@Mob@@QEAAXM@Z
     * @hash   -1689607180
     */
    MCAPI void snapToYBodyRot(float);
    /**
     * @symbol ?snapToYHeadRot@Mob@@QEAAXM@Z
     * @hash   89510672
     */
    MCAPI void snapToYHeadRot(float);
    /**
     * @symbol ?tryProcessSoulSpeed@Mob@@QEAAXXZ
     * @hash   -962333819
     */
    MCAPI void tryProcessSoulSpeed();
    /**
     * @symbol ?ARMOR_DAMAGE_DIVISOR@Mob@@2HB
     * @hash   1595515627
     */
    MCAPI static int const ARMOR_DAMAGE_DIVISOR;
    /**
     * @symbol ?ARMOR_PROTECTION_DIVIDER@Mob@@2MB
     * @hash   -870775843
     */
    MCAPI static float const ARMOR_PROTECTION_DIVIDER;
    /**
     * @symbol ?ASCEND_BLOCK_BY_JUMPING_SPEED@Mob@@2MB
     * @hash   -887751877
     */
    MCAPI static float const ASCEND_BLOCK_BY_JUMPING_SPEED;
    /**
     * @symbol ?BASE_ARMOR_TOUGHNESS@Mob@@2MB
     * @hash   1861731831
     */
    MCAPI static float const BASE_ARMOR_TOUGHNESS;
    /**
     * @symbol ?DEFAULT_GRAVITY@Mob@@2MB
     * @hash   -573597987
     */
    MCAPI static float const DEFAULT_GRAVITY;
    /**
     * @symbol ?FRICTION_CONSTANT@Mob@@2MB
     * @hash   322949503
     */
    MCAPI static float const FRICTION_CONSTANT;
    /**
     * @symbol ?FRICTION_CONSTANT_MODIFIED@Mob@@2MB
     * @hash   615326929
     */
    MCAPI static float const FRICTION_CONSTANT_MODIFIED;
    /**
     * @symbol ?FRICTION_MODIFIER@Mob@@2MB
     * @hash   -93574743
     */
    MCAPI static float const FRICTION_MODIFIER;
    /**
     * @symbol ?GLIDING_FALL_RESET_DELTA@Mob@@2MB
     * @hash   -843785835
     */
    MCAPI static float const GLIDING_FALL_RESET_DELTA;
    /**
     * @symbol ?LADDER_CLIMB_SPEED@Mob@@2MB
     * @hash   -1499854945
     */
    MCAPI static float const LADDER_CLIMB_SPEED;
    /**
     * @symbol ?MAX_ARMOR@Mob@@2MB
     * @hash   1380230737
     */
    MCAPI static float const MAX_ARMOR;
    /**
     * @symbol ?MIN_ARMOR_RATIO@Mob@@2MB
     * @hash   1647728849
     */
    MCAPI static float const MIN_ARMOR_RATIO;
    /**
     * @symbol ?NUM_ARMOR_ITEMS@Mob@@2MB
     * @hash   -1603883813
     */
    MCAPI static float const NUM_ARMOR_ITEMS;
    /**
     * @symbol ?PLAYER_SWIMMING_SURFACE_OFFSET@Mob@@2MB
     * @hash   -2076517343
     */
    MCAPI static float const PLAYER_SWIMMING_SURFACE_OFFSET;
    /**
     * @symbol ?REMOVE_PASSENGERS_DELAY@Mob@@2HB
     * @hash   1336278937
     */
    MCAPI static int const REMOVE_PASSENGERS_DELAY;
    /**
     * @symbol ?SLOW_FALL_GRAVITY@Mob@@2MB
     * @hash   -61172919
     */
    MCAPI static float const SLOW_FALL_GRAVITY;
    /**
     * @symbol ?SPAWN_XP_DELAY@Mob@@2HB
     * @hash   523103627
     */
    MCAPI static int const SPAWN_XP_DELAY;
    /**
     * @symbol ?TOTAL_ROLL_STEPS@Mob@@2HB
     * @hash   -2101155389
     */
    MCAPI static int const TOTAL_ROLL_STEPS;
    /**
     * @symbol ?_aiStep@Mob@@SAXAEAUIMobMovementProxy@@@Z
     * @hash   -1873821018
     */
    MCAPI static void _aiStep(struct IMobMovementProxy &);
    /**
     * @symbol ?_calcMoveRelativeSpeed@Mob@@SAMAEAUIMobMovementProxy@@W4TravelType@@@Z
     * @hash   1562199356
     */
    MCAPI static float _calcMoveRelativeSpeed(struct IMobMovementProxy &, enum class TravelType);
    /**
     * @symbol ?_travel@Mob@@SAXAEAUIMobMovementProxy@@MMM@Z
     * @hash   1355813243
     */
    MCAPI static void _travel(struct IMobMovementProxy &, float, float, float);
    /**
     * @symbol ?_updateMobTravel@Mob@@SAXAEAUIMobMovementProxy@@@Z
     * @hash   -1098853318
     */
    MCAPI static void _updateMobTravel(struct IMobMovementProxy &);
    /**
     * @symbol ?calculateJumpImpulse@Mob@@SAMAEBUIMobMovementProxy@@@Z
     * @hash   -35651611
     */
    MCAPI static float calculateJumpImpulse(struct IMobMovementProxy const &);
    /**
     * @symbol ?getJumpEffectAmplifierValue@Mob@@SAMAEBUIMobMovementProxy@@@Z
     * @hash   804085179
     */
    MCAPI static float getJumpEffectAmplifierValue(struct IMobMovementProxy const &);
    /**
     * @symbol ?getJumpPrevention@Mob@@SA?AUJumpPreventionResult@@AEBUIMobMovementProxy@@@Z
     * @hash   -844323013
     */
    MCAPI static struct JumpPreventionResult getJumpPrevention(struct IMobMovementProxy const &);
    /**
     * @symbol ?getTravelType@Mob@@SA?AW4TravelType@@AEAUIMobMovementProxy@@@Z
     * @hash   -1066306537
     */
    MCAPI static enum class TravelType getTravelType(struct IMobMovementProxy &);
    /**
     * @symbol ?isImmobile@Mob@@SA_NAEBUIActorMovementProxy@@@Z
     * @hash   336910603
     */
    MCAPI static bool isImmobile(struct IActorMovementProxy const &);
    /**
     * @symbol ?setSprinting@Mob@@SAXAEAVBaseAttributeMap@@VSynchedActorDataWriter@@_N@Z
     * @hash   1505024476
     */
    MCAPI static void setSprinting(class BaseAttributeMap &, class SynchedActorDataWriter, bool);
    /**
     * @symbol ?shouldApplyWaterGravity@Mob@@SA_NAEBUIActorMovementProxy@@@Z
     * @hash   -458799747
     */
    MCAPI static bool shouldApplyWaterGravity(struct IActorMovementProxy const &);
    /**
     * @symbol ?tryGetFromEntity@Mob@@SAPEAV1@AEAVEntityContext@@_N@Z
     * @hash   -1002883350
     */
    MCAPI static class Mob * tryGetFromEntity(class EntityContext &, bool);

//protected:
    /**
     * @symbol ?_doSprintParticleEffect@Mob@@IEAAXXZ
     * @hash   -282935266
     */
    MCAPI void _doSprintParticleEffect();
    /**
     * @symbol ?_processSoulSpeed@Mob@@IEAAXXZ
     * @hash   -1538404777
     */
    MCAPI void _processSoulSpeed();
    /**
     * @symbol ?_registerMobAttributes@Mob@@IEAAXXZ
     * @hash   1712500536
     */
    MCAPI void _registerMobAttributes();
    /**
     * @symbol ?getCurrentSwingDuration@Mob@@IEAAHXZ
     * @hash   -1286707753
     */
    MCAPI int getCurrentSwingDuration();
    /**
     * @symbol ?saveOffhand@Mob@@IEBA?AV?$unique_ptr@VListTag@@U?$default_delete@VListTag@@@std@@@std@@XZ
     * @hash   -957576252
     */
    MCAPI std::unique_ptr<class ListTag> saveOffhand() const;
    /**
     * @symbol ?tickEffects@Mob@@IEAAXXZ
     * @hash   -811173064
     */
    MCAPI void tickEffects();
    /**
     * @symbol ?updateAttackAnim@Mob@@IEAAXXZ
     * @hash   1928812757
     */
    MCAPI void updateAttackAnim();
    /**
     * @symbol ?updateGlidingDurability@Mob@@IEAA_NXZ
     * @hash   858931807
     */
    MCAPI bool updateGlidingDurability();
    /**
     * @symbol ?_jumpFromGround@Mob@@KAXAEAUIMobMovementProxy@@@Z
     * @hash   1906152918
     */
    MCAPI static void _jumpFromGround(struct IMobMovementProxy &);

//private:
    /**
     * @symbol ?_initHardCodedComponents@Mob@@AEAA_NXZ
     * @hash   1805415417
     */
    MCAPI bool _initHardCodedComponents();
    /**
     * @symbol ?_initialize@Mob@@AEAAXAEAVEntityContext@@@Z
     * @hash   -152405243
     */
    MCAPI void _initialize(class EntityContext &);
    /**
     * @symbol ?_saveArmor@Mob@@AEBA?AV?$unique_ptr@VListTag@@U?$default_delete@VListTag@@@std@@@std@@XZ
     * @hash   890084975
     */
    MCAPI std::unique_ptr<class ListTag> _saveArmor() const;
    /**
     * @symbol ?_updateSprintingState@Mob@@AEAAXXZ
     * @hash   -1640998595
     */
    MCAPI void _updateSprintingState();
    /**
     * @symbol ?_verifyAttributes@Mob@@AEAAXXZ
     * @hash   -1251269621
     */
    MCAPI void _verifyAttributes();
    /**
     * @symbol ?_tryApplyingLevitation@Mob@@CA_NAEBUIMobMovementProxy@@AEAVVec3@@@Z
     * @hash   320801024
     */
    MCAPI static bool _tryApplyingLevitation(struct IMobMovementProxy const &, class Vec3 &);

protected:
    /**
     * @symbol ?MAX_INACTIVITY_TIMER@Mob@@1HB
     * @hash   202717571
     */
    MCAPI static int const MAX_INACTIVITY_TIMER;

private:

};