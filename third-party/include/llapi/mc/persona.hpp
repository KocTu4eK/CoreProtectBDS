/**
 * @file  persona.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC namespace persona.
 *
 */
namespace persona {

#define AFTER_EXTRA
// Add Member There
enum class AnimatedTextureType;
enum class PieceType;

#undef AFTER_EXTRA
    /**
     * @symbol ?ANIMATED_128X128_NAME@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -443425147
     */
    MCAPI extern std::string const ANIMATED_128X128_NAME;
    /**
     * @symbol ?ANIMATED_128X128_TEXTURE_CONTROLLER_FIRST_PERSON@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   478992199
     */
    MCAPI extern std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_FIRST_PERSON;
    /**
     * @symbol ?ANIMATED_128X128_TEXTURE_CONTROLLER_THIRD_PERSON@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   1291345799
     */
    MCAPI extern std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_THIRD_PERSON;
    /**
     * @symbol ?ANIMATED_128X128_TEXTURE_FRAMES_VARIABLE@persona@@3VHashedString@@B
     * @hash   567130313
     */
    MCAPI extern class HashedString const ANIMATED_128X128_TEXTURE_FRAMES_VARIABLE;
    /**
     * @symbol ?ANIMATED_32X32_NAME@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -1714699163
     */
    MCAPI extern std::string const ANIMATED_32X32_NAME;
    /**
     * @symbol ?ANIMATED_32X32_TEXTURE_CONTROLLER_FIRST_PERSON@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   1422344487
     */
    MCAPI extern std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_FIRST_PERSON;
    /**
     * @symbol ?ANIMATED_32X32_TEXTURE_CONTROLLER_THIRD_PERSON@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -2060269209
     */
    MCAPI extern std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_THIRD_PERSON;
    /**
     * @symbol ?ANIMATED_32X32_TEXTURE_FRAMES_VARIABLE@persona@@3VHashedString@@B
     * @hash   1566443293
     */
    MCAPI extern class HashedString const ANIMATED_32X32_TEXTURE_FRAMES_VARIABLE;
    /**
     * @symbol ?ANIMATED_FACE_CONTROLLER_FIRST_PERSON@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -265771131
     */
    MCAPI extern std::string const ANIMATED_FACE_CONTROLLER_FIRST_PERSON;
    /**
     * @symbol ?ANIMATED_FACE_CONTROLLER_THIRD_PERSON@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   546582469
     */
    MCAPI extern std::string const ANIMATED_FACE_CONTROLLER_THIRD_PERSON;
    /**
     * @symbol ?ANIMATED_FACE_NAME@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -1824186617
     */
    MCAPI extern std::string const ANIMATED_FACE_NAME;
    /**
     * @symbol ?ANIMATED_FACE_TEXTURE_FRAMES_VARIABLE@persona@@3VHashedString@@B
     * @hash   -1298075063
     */
    MCAPI extern class HashedString const ANIMATED_FACE_TEXTURE_FRAMES_VARIABLE;
    /**
     * @symbol ?INVALID_INDEX@persona@@3HB
     * @hash   -1179306607
     */
    MCAPI extern int const INVALID_INDEX;
    /**
     * @symbol ?NONE_PIECE_ID@persona@@3VUUID@mce@@B
     * @hash   -1063393671
     */
    MCAPI extern class mce::UUID const NONE_PIECE_ID;
    /**
     * @symbol ?NONE_PIECE_PATH@persona@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -756683259
     */
    MCAPI extern std::string const NONE_PIECE_PATH;
    /**
     * @symbol ?NO_PIECE_SELECTED@persona@@3VUUID@mce@@B
     * @hash   -1885706953
     */
    MCAPI extern class mce::UUID const NO_PIECE_SELECTED;
    /**
     * @symbol ?USE_BLINKING_ANIMATION_VARIABLE@persona@@3VHashedString@@B
     * @hash   -2007679245
     */
    MCAPI extern class HashedString const USE_BLINKING_ANIMATION_VARIABLE;
    /**
     * @symbol ?pieceTypeFromString@persona@@YA?AW4PieceType@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   1523654729
     */
    MCAPI enum class persona::PieceType pieceTypeFromString(std::string const &);
    /**
     * @symbol ?stringFromPieceType@persona@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PieceType@1@_N@Z
     * @hash   -2084564996
     */
    MCAPI std::string const & stringFromPieceType(enum class persona::PieceType, bool);

};