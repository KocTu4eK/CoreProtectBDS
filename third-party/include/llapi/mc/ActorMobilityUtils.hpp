/**
 * @file  ActorMobilityUtils.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

/**
 * @brief MC namespace ActorMobilityUtils.
 *
 */
namespace ActorMobilityUtils {

#define AFTER_EXTRA

#undef AFTER_EXTRA
    /**
     * @symbol ?actorSetSize@ActorMobilityUtils@@YAXAEAVStrictEntityContext@@AEBVVec2@@AEAUSynchedActorDataComponent@@AEAUAABBShapeComponent@@AEBUStateVectorComponent@@AEAV?$EntityModifierT@VEntityRegistryBase@@VStrictEntityContext@@V?$FlagComponent@UWasPenetratingLastFrameFlag@@@@@@V?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@U?$Include@V?$FlagComponent@UPlayerComponentFlag@@@@@@UOffsetsComponent@@@@@Z
     * @hash   1723811442
     */
    MCAPI void actorSetSize(class StrictEntityContext &, class Vec2 const &, struct SynchedActorDataComponent &, struct AABBShapeComponent &, struct StateVectorComponent const &, class EntityModifierT<class EntityRegistryBase, class StrictEntityContext, class FlagComponent<struct WasPenetratingLastFrameFlag>> &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<class FlagComponent<struct PlayerComponentFlag>>, struct OffsetsComponent>);
    /**
     * @symbol ?canBeginOrContinueClimbingLadder@ActorMobilityUtils@@YA_NAEBUAABBShapeComponent@@AEBUConstBlockSourceComponent@@AEBUStateVectorComponent@@AEBUSynchedActorDataComponent@@@Z
     * @hash   -1302689357
     */
    MCAPI bool canBeginOrContinueClimbingLadder(struct AABBShapeComponent const &, struct ConstBlockSourceComponent const &, struct StateVectorComponent const &, struct SynchedActorDataComponent const &);
    /**
     * @symbol ?canPowerJump@ActorMobilityUtils@@YA_NAEBUSynchedActorDataComponent@@PEBUAttributesComponent@@_N@Z
     * @hash   -1338678221
     */
    MCAPI bool canPowerJump(struct SynchedActorDataComponent const &, struct AttributesComponent const *, bool);
    /**
     * @symbol ?endJump@ActorMobilityUtils@@YAXAEBUStateVectorComponent@@AEAUMobJumpComponent@@AEAUSynchedActorDataComponent@@PEBUVehicleComponent@@V?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@U?$Include@V?$FlagComponent@UParrotFlag@@@@@@$$CBUPassengerComponent@@@@AEAV?$EntityModifierT@VEntityRegistryBase@@VStrictEntityContext@@V?$FlagComponent@UExitFromPassengerFlag@@@@V?$FlagComponent@UStopRidingRequestFlag@@@@@@@Z
     * @hash   -640561681
     */
    MCAPI void endJump(struct StateVectorComponent const &, struct MobJumpComponent &, struct SynchedActorDataComponent &, struct VehicleComponent const *, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<class FlagComponent<struct ParrotFlag>>, struct PassengerComponent const>, class EntityModifierT<class EntityRegistryBase, class StrictEntityContext, class FlagComponent<struct ExitFromPassengerFlag>, class FlagComponent<struct StopRidingRequestFlag>> &);
    /**
     * @symbol ?getJumpPower@ActorMobilityUtils@@YAMPEBVJumpControlComponent@@PEBV?$FlagComponent@USquidFlag@@@@@Z
     * @hash   -1314619430
     */
    MCAPI float getJumpPower(class JumpControlComponent const *, class FlagComponent<struct SquidFlag> const *);
    /**
     * @symbol ?getPosFromAABB@ActorMobilityUtils@@YA?AVVec3@@AEBVAABB@@MAEBVVec2@@@Z
     * @hash   1904655170
     */
    MCAPI class Vec3 getPosFromAABB(class AABB const &, float, class Vec2 const &);
    /**
     * @symbol ?isFlying@ActorMobilityUtils@@YA_NAEBUAbilitiesComponent@@@Z
     * @hash   40260958
     */
    MCAPI bool isFlying(struct AbilitiesComponent const &);
    /**
     * @symbol ?isFree@ActorMobilityUtils@@YA_NAEBVIConstBlockSource@@AEBVAABB@@AEBVVec3@@M@Z
     * @hash   1500588399
     */
    MCAPI bool isFree(class IConstBlockSource const &, class AABB const &, class Vec3 const &, float);
    /**
     * @symbol ?isImmersedInWater@ActorMobilityUtils@@YA_NAEBVVec3@@AEBVIConstBlockSource@@AEBVVec2@@@Z
     * @hash   -421739866
     */
    MCAPI bool isImmersedInWater(class Vec3 const &, class IConstBlockSource const &, class Vec2 const &);
    /**
     * @symbol ?isImmobile@ActorMobilityUtils@@YA_NAEBVStrictEntityContext@@PEAV?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@$$CBUSynchedActorDataComponent@@V?$Optional@V?$FlagComponent@UActorIsImmobileFlag@@@@@@@@PEAV?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@U?$Include@V?$FlagComponent@UMobFlag@@@@@@$$CBUAttributesComponent@@V?$Optional@V?$FlagComponent@UActorIsKnockedBackOnDeathFlag@@@@@@@@PEAV?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@$$CBUSynchedActorDataComponent@@$$CBUMobJumpComponent@@U?$Include@V?$FlagComponent@UOnGroundFlag@@@@V?$FlagComponent@UHorseFlag@@@@@@U?$Exclude@V?$FlagComponent@UMobAllowStandSlidingFlag@@@@@@@@PEAV?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@V?$FlagComponent@UHorseFlag@@@@@@PEAV?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@$$CBV?$FlagComponent@UPlayerIsSleepingFlag@@@@$$CBV?$FlagComponent@UPlayerComponentFlag@@@@@@@Z
     * @hash   -31572793
     */
    MCAPI bool isImmobile(class StrictEntityContext const &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SynchedActorDataComponent const, class Optional<class FlagComponent<struct ActorIsImmobileFlag>>> *, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<class FlagComponent<struct MobFlag>>, struct AttributesComponent const, class Optional<class FlagComponent<struct ActorIsKnockedBackOnDeathFlag>>> *, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SynchedActorDataComponent const, struct MobJumpComponent const, struct Include<class FlagComponent<struct OnGroundFlag>, class FlagComponent<struct HorseFlag>>, struct Exclude<class FlagComponent<struct MobAllowStandSlidingFlag>>> *, class ViewT<class StrictEntityContext, class EntityRegistryBase, class FlagComponent<struct HorseFlag>> *, class ViewT<class StrictEntityContext, class EntityRegistryBase, class FlagComponent<struct PlayerIsSleepingFlag> const, class FlagComponent<struct PlayerComponentFlag> const> *);
    /**
     * @symbol ?isInLava@ActorMobilityUtils@@YA_NAEBVIConstBlockSource@@AEBUAABBShapeComponent@@AEBUSubBBsComponent@@@Z
     * @hash   1075893602
     */
    MCAPI bool isInLava(class IConstBlockSource const &, struct AABBShapeComponent const &, struct SubBBsComponent const &);
    /**
     * @symbol ?isJumping@ActorMobilityUtils@@YA_NAEBUMobJumpComponent@@PEBUAbilitiesComponent@@@Z
     * @hash   451659358
     */
    MCAPI bool isJumping(struct MobJumpComponent const &, struct AbilitiesComponent const *);
    /**
     * @symbol ?isSprinting@ActorMobilityUtils@@YA_NAEBUSynchedActorDataComponent@@@Z
     * @hash   648409724
     */
    MCAPI bool isSprinting(struct SynchedActorDataComponent const &);
    /**
     * @symbol ?isSwimming@ActorMobilityUtils@@YA_NAEBUSynchedActorDataComponent@@@Z
     * @hash   1696938844
     */
    MCAPI bool isSwimming(struct SynchedActorDataComponent const &);
    /**
     * @symbol ?isUnderLiquid@ActorMobilityUtils@@YA_NAEBVVec3@@0AEBVIConstBlockSource@@W4MaterialType@@@Z
     * @hash   999650704
     */
    MCAPI bool isUnderLiquid(class Vec3 const &, class Vec3 const &, class IConstBlockSource const &, enum class MaterialType);
    /**
     * @symbol ?moveBBs@ActorMobilityUtils@@YAXAEBVVec3@@AEAUAABBShapeComponent@@AEAUSubBBsComponent@@@Z
     * @hash   -1274945129
     */
    MCAPI void moveBBs(class Vec3 const &, struct AABBShapeComponent &, struct SubBBsComponent &);
    /**
     * @symbol ?onClimbableBlock@ActorMobilityUtils@@YA_NAEBUAABBShapeComponent@@AEBUConstBlockSourceComponent@@AEBUStateVectorComponent@@@Z
     * @hash   460512774
     */
    MCAPI bool onClimbableBlock(struct AABBShapeComponent const &, struct ConstBlockSourceComponent const &, struct StateVectorComponent const &);
    /**
     * @symbol ?setLocalPlayerSneaking@ActorMobilityUtils@@YAXAEAUSynchedActorDataComponent@@PEAUPlayerActionComponent@@_N@Z
     * @hash   -2047685512
     */
    MCAPI void setLocalPlayerSneaking(struct SynchedActorDataComponent &, struct PlayerActionComponent *, bool);
    /**
     * @symbol ?setSprinting@ActorMobilityUtils@@YAXAEAUAttributesComponent@@AEAUSynchedActorDataComponent@@V?$optional_ref@UPlayerActionComponent@@@@_N@Z
     * @hash   -1134315815
     */
    MCAPI void setSprinting(struct AttributesComponent &, struct SynchedActorDataComponent &, class optional_ref<struct PlayerActionComponent>, bool);
    /**
     * @symbol ?shouldApplyWaterGravity@ActorMobilityUtils@@YA_NPEBVNavigationComponent@@PEBVPhysicsComponent@@VSynchedActorDataReader@@AEBVVec3@@AEBVIConstBlockSource@@AEBVVec2@@@Z
     * @hash   -1928951123
     */
    MCAPI bool shouldApplyWaterGravity(class NavigationComponent const *, class PhysicsComponent const *, class SynchedActorDataReader, class Vec3 const &, class IConstBlockSource const &, class Vec2 const &);
    /**
     * @symbol ?updateBBFromDefinition@ActorMobilityUtils@@YAXAEAVStrictEntityContext@@V?$optional_ref@$$CBUCollisionBoxDefinitionComponent@@@@AEAUSynchedActorDataComponent@@AEAUAABBShapeComponent@@AEBUStateVectorComponent@@AEAV?$EntityModifierT@VEntityRegistryBase@@VStrictEntityContext@@V?$FlagComponent@UWasPenetratingLastFrameFlag@@@@@@V?$ViewT@VStrictEntityContext@@VEntityRegistryBase@@U?$Include@V?$FlagComponent@UPlayerComponentFlag@@@@@@UOffsetsComponent@@@@@Z
     * @hash   1713120241
     */
    MCAPI void updateBBFromDefinition(class StrictEntityContext &, class optional_ref<struct CollisionBoxDefinitionComponent const>, struct SynchedActorDataComponent &, struct AABBShapeComponent &, struct StateVectorComponent const &, class EntityModifierT<class EntityRegistryBase, class StrictEntityContext, class FlagComponent<struct WasPenetratingLastFrameFlag>> &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<class FlagComponent<struct PlayerComponentFlag>>, struct OffsetsComponent>);

};